{
  "testModules": [
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/test-tdd-guard-blocking.test.ts",
      "tests": [
        {
          "name": "should have a greeting function",
          "fullName": "TDD Guard Blocking Test > should have a greeting function",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/services/mock-api.test.ts",
      "tests": [
        {
          "name": "should have proper configuration structure",
          "fullName": "Mock API Configuration > MockAPIConfig > should have proper configuration structure",
          "state": "skipped"
        },
        {
          "name": "should allow enabling/disabling mock services",
          "fullName": "Mock API Configuration > MockAPIConfig > should allow enabling/disabling mock services",
          "state": "skipped"
        },
        {
          "name": "should support configurable delay for simulating network latency",
          "fullName": "Mock API Configuration > MockAPIConfig > should support configurable delay for simulating network latency",
          "state": "skipped"
        },
        {
          "name": "should support error rate configuration for testing error scenarios",
          "fullName": "Mock API Configuration > MockAPIConfig > should support error rate configuration for testing error scenarios",
          "state": "skipped"
        },
        {
          "name": "should successfully authenticate valid credentials",
          "fullName": "Mock Authentication Service > login > should successfully authenticate valid credentials",
          "state": "skipped"
        },
        {
          "name": "should reject invalid credentials",
          "fullName": "Mock Authentication Service > login > should reject invalid credentials",
          "state": "skipped"
        },
        {
          "name": "should include customer context in auth response",
          "fullName": "Mock Authentication Service > login > should include customer context in auth response",
          "state": "skipped"
        },
        {
          "name": "should simulate network delay",
          "fullName": "Mock Authentication Service > login > should simulate network delay",
          "state": "skipped"
        },
        {
          "name": "should successfully logout current user",
          "fullName": "Mock Authentication Service > logout > should successfully logout current user",
          "state": "skipped"
        },
        {
          "name": "should refresh valid token",
          "fullName": "Mock Authentication Service > refresh > should refresh valid token",
          "state": "skipped"
        },
        {
          "name": "should reject invalid refresh token",
          "fullName": "Mock Authentication Service > refresh > should reject invalid refresh token",
          "state": "skipped"
        },
        {
          "name": "should validate active tokens",
          "fullName": "Mock Authentication Service > validateToken > should validate active tokens",
          "state": "skipped"
        },
        {
          "name": "should reject expired tokens",
          "fullName": "Mock Authentication Service > validateToken > should reject expired tokens",
          "state": "skipped"
        },
        {
          "name": "should return current authenticated user",
          "fullName": "Mock Authentication Service > getCurrentUser > should return current authenticated user",
          "state": "skipped"
        },
        {
          "name": "should include proper user permissions",
          "fullName": "Mock Authentication Service > getCurrentUser > should include proper user permissions",
          "state": "skipped"
        },
        {
          "name": "should return list of available customers",
          "fullName": "Mock Customer Service > getCustomers > should return list of available customers",
          "state": "skipped"
        },
        {
          "name": "should include realistic customer data",
          "fullName": "Mock Customer Service > getCustomers > should include realistic customer data",
          "state": "skipped"
        },
        {
          "name": "should return specific customer by ID",
          "fullName": "Mock Customer Service > getCustomerById > should return specific customer by ID",
          "state": "skipped"
        },
        {
          "name": "should reject invalid customer ID",
          "fullName": "Mock Customer Service > getCustomerById > should reject invalid customer ID",
          "state": "skipped"
        },
        {
          "name": "should switch to valid customer context",
          "fullName": "Mock Customer Service > switchCustomer > should switch to valid customer context",
          "state": "skipped"
        },
        {
          "name": "should update current customer after switching",
          "fullName": "Mock Customer Service > switchCustomer > should update current customer after switching",
          "state": "skipped"
        },
        {
          "name": "should return currently active customer",
          "fullName": "Mock Customer Service > getCurrentCustomer > should return currently active customer",
          "state": "skipped"
        },
        {
          "name": "should include customer settings",
          "fullName": "Mock Customer Service > getCurrentCustomer > should include customer settings",
          "state": "skipped"
        },
        {
          "name": "should return comprehensive dashboard metrics",
          "fullName": "Mock Analytics Service > getDashboardMetrics > should return comprehensive dashboard metrics",
          "state": "skipped"
        },
        {
          "name": "should return realistic metric values",
          "fullName": "Mock Analytics Service > getDashboardMetrics > should return realistic metric values",
          "state": "skipped"
        },
        {
          "name": "should include trend data for time series charts",
          "fullName": "Mock Analytics Service > getDashboardMetrics > should include trend data for time series charts",
          "state": "skipped"
        },
        {
          "name": "should return chart data for different chart types",
          "fullName": "Mock Analytics Service > getChartData > should return chart data for different chart types",
          "state": "skipped"
        },
        {
          "name": "should support department filtering",
          "fullName": "Mock Analytics Service > getChartData > should support department filtering",
          "state": "skipped"
        },
        {
          "name": "should include proper dataset structure",
          "fullName": "Mock Analytics Service > getChartData > should include proper dataset structure",
          "state": "skipped"
        },
        {
          "name": "should generate report data with proper structure",
          "fullName": "Mock Analytics Service > getReportData > should generate report data with proper structure",
          "state": "skipped"
        },
        {
          "name": "should include report metadata",
          "fullName": "Mock Analytics Service > getReportData > should include report metadata",
          "state": "skipped"
        },
        {
          "name": "should generate specified number of users",
          "fullName": "Mock Data Generator > generateUsers > should generate specified number of users",
          "state": "skipped"
        },
        {
          "name": "should generate realistic user data",
          "fullName": "Mock Data Generator > generateUsers > should generate realistic user data",
          "state": "skipped"
        },
        {
          "name": "should generate specified number of courses",
          "fullName": "Mock Data Generator > generateCourses > should generate specified number of courses",
          "state": "skipped"
        },
        {
          "name": "should generate realistic course categories",
          "fullName": "Mock Data Generator > generateCourses > should generate realistic course categories",
          "state": "skipped"
        },
        {
          "name": "should generate completion records for users and courses",
          "fullName": "Mock Data Generator > generateCompletions > should generate completion records for users and courses",
          "state": "skipped"
        },
        {
          "name": "should generate realistic completion statuses",
          "fullName": "Mock Data Generator > generateCompletions > should generate realistic completion statuses",
          "state": "skipped"
        },
        {
          "name": "should generate comprehensive analytics dataset",
          "fullName": "Mock Data Generator > generateAnalyticsData > should generate comprehensive analytics dataset",
          "state": "skipped"
        },
        {
          "name": "should intercept API requests in development mode",
          "fullName": "Mock API Interceptors > Development-only interceptors > should intercept API requests in development mode",
          "state": "skipped"
        },
        {
          "name": "should not intercept requests in production",
          "fullName": "Mock API Interceptors > Development-only interceptors > should not intercept requests in production",
          "state": "skipped"
        },
        {
          "name": "should handle authentication endpoints",
          "fullName": "Mock API Interceptors > Development-only interceptors > should handle authentication endpoints",
          "state": "skipped"
        },
        {
          "name": "should handle customer endpoints",
          "fullName": "Mock API Interceptors > Development-only interceptors > should handle customer endpoints",
          "state": "skipped"
        },
        {
          "name": "should handle analytics endpoints",
          "fullName": "Mock API Interceptors > Development-only interceptors > should handle analytics endpoints",
          "state": "skipped"
        },
        {
          "name": "should simulate 401 unauthorized errors",
          "fullName": "Mock Error Scenarios > Authentication errors > should simulate 401 unauthorized errors",
          "state": "skipped"
        },
        {
          "name": "should simulate token expiration errors",
          "fullName": "Mock Error Scenarios > Authentication errors > should simulate token expiration errors",
          "state": "skipped"
        },
        {
          "name": "should simulate network timeout errors",
          "fullName": "Mock Error Scenarios > Network errors > should simulate network timeout errors",
          "state": "skipped"
        },
        {
          "name": "should simulate server errors (500)",
          "fullName": "Mock Error Scenarios > Network errors > should simulate server errors (500)",
          "state": "skipped"
        },
        {
          "name": "should simulate missing data scenarios",
          "fullName": "Mock Error Scenarios > Data errors > should simulate missing data scenarios",
          "state": "skipped"
        },
        {
          "name": "should simulate corrupted data scenarios",
          "fullName": "Mock Error Scenarios > Data errors > should simulate corrupted data scenarios",
          "state": "skipped"
        },
        {
          "name": "should simulate realistic loading delays",
          "fullName": "Mock API Loading States > Loading delay simulation > should simulate realistic loading delays",
          "state": "skipped"
        },
        {
          "name": "should provide loading progress callbacks",
          "fullName": "Mock API Loading States > Loading delay simulation > should provide loading progress callbacks",
          "state": "skipped"
        },
        {
          "name": "should integrate all mock services in a unified way",
          "fullName": "Mock API Integration > Service integration > should integrate all mock services in a unified way",
          "state": "skipped"
        },
        {
          "name": "should provide centralized configuration",
          "fullName": "Mock API Integration > Service integration > should provide centralized configuration",
          "state": "skipped"
        },
        {
          "name": "should allow easy service initialization",
          "fullName": "Mock API Integration > Service integration > should allow easy service initialization",
          "state": "skipped"
        },
        {
          "name": "should support service cleanup for testing",
          "fullName": "Mock API Integration > Service integration > should support service cleanup for testing",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/tooltips/rich-tooltips.test.tsx",
      "tests": [
        {
          "name": "should display rich tooltip content with formatted data and trend information",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 1. Tooltip Content Rendering > should display rich tooltip content with formatted data and trend information",
          "state": "passed"
        },
        {
          "name": "should format different data types correctly in tooltip content",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 1. Tooltip Content Rendering > should format different data types correctly in tooltip content",
          "state": "passed"
        },
        {
          "name": "should maintain consistent tooltip styling across different chart types",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 2. Multi-Chart Tooltip Consistency > should maintain consistent tooltip styling across different chart types",
          "state": "failed",
          "errors": [
            {
              "stack": "TypeError: performance.getMetrics is not a function\n    at Module.useBarChart (/Users/russellgrocott/Projects/kineo-analytics/frontend/src/hooks/useBarChart.ts:214:30)\n    at BarChart (/Users/russellgrocott/Projects/kineo-analytics/frontend/src/components/charts/BarChart.tsx:51:7)\n    at renderWithHooks (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:15486:18)\n    at mountIndeterminateComponent (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:20103:13)\n    at beginWork (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:21626:16)\n    at beginWork$1 (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:27465:14)\n    at performUnitOfWork (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:26599:12)\n    at workLoopSync (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:26505:5)\n    at renderRootSync (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:26473:7)\n    at recoverFromConcurrentError (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/react-dom/cjs/react-dom.development.js:25889:20)",
              "message": "performance.getMetrics is not a function",
              "constructor": "Function<TypeError>",
              "name": "TypeError",
              "toString": "Function<toString>"
            }
          ]
        },
        {
          "name": "should detect hover events and position tooltip correctly relative to mouse",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 3. Hover Detection and Positioning > should detect hover events and position tooltip correctly relative to mouse",
          "state": "passed"
        },
        {
          "name": "should handle rapid hover events without performance issues",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 3. Hover Detection and Positioning > should handle rapid hover events without performance issues",
          "state": "skipped"
        },
        {
          "name": "should maintain smooth hover transitions with <100ms response time",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 4. Hover Performance Optimization > should maintain smooth hover transitions with <100ms response time",
          "state": "skipped"
        },
        {
          "name": "should optimize tooltip rendering for complex content without lag",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 4. Hover Performance Optimization > should optimize tooltip rendering for complex content without lag",
          "state": "failed",
          "errors": [
            {
              "stack": "TypeError: performance.now is not a function\n    at /Users/russellgrocott/Projects/kineo-analytics/frontend/tests/tooltips/rich-tooltips.test.tsx:475:43\n    at file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:155:11\n    at file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:752:26\n    at file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1897:20\n    at new Promise (<anonymous>)\n    at runWithTimeout (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1863:10)\n    at runTest (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1574:12)\n    at runSuite (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)\n    at runSuite (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/runner/dist/chunk-hooks.js:1729:8)",
              "message": "performance.now is not a function",
              "constructor": "Function<TypeError>",
              "name": "TypeError",
              "toString": "Function<toString>"
            }
          ]
        },
        {
          "name": "should adjust tooltip position to stay within viewport boundaries",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 5. Smart Positioning and Viewport Boundaries > should adjust tooltip position to stay within viewport boundaries",
          "state": "failed",
          "errors": [
            {
              "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31melement\u001b[39m\u001b[2m).toHaveAttribute(\u001b[22m\u001b[32m\u001b[32m\"data-anchor\"\u001b[32m\u001b[39m\u001b[2m, \u001b[22m\u001b[32m\u001b[32m\"right\"\u001b[32m\u001b[39m\u001b[2m) // element.getAttribute(\"data-anchor\") === \"right\"\u001b[22m\n\nExpected the element to have attribute:\n\u001b[32m  data-anchor=\"right\"\u001b[39m\nReceived:\n\u001b[31m  data-anchor=\"bottom-right\"\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-top\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mTop Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-right\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mRight Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-bottom\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mBottom Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-left\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mLeft Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33maria-atomic\u001b[39m=\u001b[32m\"true\"\u001b[39m\n          \u001b[33maria-describedby\u001b[39m=\u001b[32m\"tooltip-description\"\u001b[39m\n          \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"tooltip-title\"\u001b[39m\n          \u001b[33maria-live\u001b[39m=\u001b[32m\"polite\"\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"rich-tooltip tooltip-bar-chart tooltip-line-chart tooltip-pie-chart \"\u001b[39m\n          \u001b[33mdata-anchor\u001b[39m=\u001b[32m\"bottom-right\"\u001b[39m\n          \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-content\"\u001b[39m\n          \u001b[33mrole\u001b[39m=\u001b[32m\"tooltip\"\u001b[39m\n          \u001b[33mstyle\u001b[39m=\u001b[32m\"background-color: rgb(31, 41, 55); color: rgb(249, 250, 251); border: 1px solid #374151; border-radius: 8px; padding: 12px 16px; font-size: 14px; font-family: Inter, system-ui, sans-serif; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); max-width: 300px; min-width: 200px; position: absolute; left: 50px; top: 310px; z-index: 1000; transition: opacity 0.2s ease-in-out;\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-title\"\u001b[39m\n            \u001b[33mstyle\u001b[39m=\u001b[32m\"font-weight: 600; margin-bottom: 8px;\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mLeft Edge Test\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-description\"\u001b[39m\n            \u001b[33mstyle\u001b[39m=\u001b[32m\"margin-bottom: 0px;\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mstyle\u001b[39m=\u001b[32m\"display: flex; justify-content: space-between; margin-bottom: 4px; font-size: 13px;\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<span\u001b[39m\n                \u001b[33mstyle\u001b[39m=\u001b[32m\"color: rgb(209, 213, 219);\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPosition\u001b[0m\n                \u001b[0m:\u001b[0m\n              \u001b[36m</span>\u001b[39m\n              \u001b[36m<span\u001b[39m\n                \u001b[33mstyle\u001b[39m=\u001b[32m\"font-weight: 500;\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m50, 300\u001b[0m\n              \u001b[36m</span>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m\n    at Proxy.expectWrapper (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/expect/dist/index.js:1745:12)\n    at Proxy.<anonymous> (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@vitest/expect/dist/index.js:1029:14)\n    at Proxy.methodWrapper (file:///Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/chai/index.js:1686:25)\n    at /Users/russellgrocott/Projects/kineo-analytics/frontend/tests/tooltips/rich-tooltips.test.tsx:597:25\n    at runWithExpensiveErrorDiagnosticsDisabled (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/config.js:47:12)\n    at checkCallback (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:127:77)\n    at Timeout.checkRealTimersCallback (/Users/russellgrocott/Projects/kineo-analytics/frontend/node_modules/@testing-library/react/node_modules/@testing-library/dom/dist/wait-for.js:121:16)\n    at listOnTimeout (node:internal/timers:588:17)\n    at processTimers (node:internal/timers:523:7)",
              "message": "\u001b[2mexpect(\u001b[22m\u001b[31melement\u001b[39m\u001b[2m).toHaveAttribute(\u001b[22m\u001b[32m\u001b[32m\"data-anchor\"\u001b[32m\u001b[39m\u001b[2m, \u001b[22m\u001b[32m\u001b[32m\"right\"\u001b[32m\u001b[39m\u001b[2m) // element.getAttribute(\"data-anchor\") === \"right\"\u001b[22m\n\nExpected the element to have attribute:\n\u001b[32m  data-anchor=\"right\"\u001b[39m\nReceived:\n\u001b[31m  data-anchor=\"bottom-right\"\u001b[39m\n\nIgnored nodes: comments, script, style\n\u001b[36m<html>\u001b[39m\n  \u001b[36m<head />\u001b[39m\n  \u001b[36m<body>\u001b[39m\n    \u001b[36m<div>\u001b[39m\n      \u001b[36m<div>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-top\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mTop Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-right\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mRight Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-bottom\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mBottom Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<button\u001b[39m\n          \u001b[33mdata-testid\u001b[39m=\u001b[32m\"test-left\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[0mLeft Edge\u001b[0m\n        \u001b[36m</button>\u001b[39m\n        \u001b[36m<div\u001b[39m\n          \u001b[33maria-atomic\u001b[39m=\u001b[32m\"true\"\u001b[39m\n          \u001b[33maria-describedby\u001b[39m=\u001b[32m\"tooltip-description\"\u001b[39m\n          \u001b[33maria-labelledby\u001b[39m=\u001b[32m\"tooltip-title\"\u001b[39m\n          \u001b[33maria-live\u001b[39m=\u001b[32m\"polite\"\u001b[39m\n          \u001b[33mclass\u001b[39m=\u001b[32m\"rich-tooltip tooltip-bar-chart tooltip-line-chart tooltip-pie-chart \"\u001b[39m\n          \u001b[33mdata-anchor\u001b[39m=\u001b[32m\"bottom-right\"\u001b[39m\n          \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-content\"\u001b[39m\n          \u001b[33mrole\u001b[39m=\u001b[32m\"tooltip\"\u001b[39m\n          \u001b[33mstyle\u001b[39m=\u001b[32m\"background-color: rgb(31, 41, 55); color: rgb(249, 250, 251); border: 1px solid #374151; border-radius: 8px; padding: 12px 16px; font-size: 14px; font-family: Inter, system-ui, sans-serif; box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); max-width: 300px; min-width: 200px; position: absolute; left: 50px; top: 310px; z-index: 1000; transition: opacity 0.2s ease-in-out;\"\u001b[39m\n        \u001b[36m>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-title\"\u001b[39m\n            \u001b[33mstyle\u001b[39m=\u001b[32m\"font-weight: 600; margin-bottom: 8px;\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[0mLeft Edge Test\u001b[0m\n          \u001b[36m</div>\u001b[39m\n          \u001b[36m<div\u001b[39m\n            \u001b[33mid\u001b[39m=\u001b[32m\"tooltip-description\"\u001b[39m\n            \u001b[33mstyle\u001b[39m=\u001b[32m\"margin-bottom: 0px;\"\u001b[39m\n          \u001b[36m>\u001b[39m\n            \u001b[36m<div\u001b[39m\n              \u001b[33mstyle\u001b[39m=\u001b[32m\"display: flex; justify-content: space-between; margin-bottom: 4px; font-size: 13px;\"\u001b[39m\n            \u001b[36m>\u001b[39m\n              \u001b[36m<span\u001b[39m\n                \u001b[33mstyle\u001b[39m=\u001b[32m\"color: rgb(209, 213, 219);\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0mPosition\u001b[0m\n                \u001b[0m:\u001b[0m\n              \u001b[36m</span>\u001b[39m\n              \u001b[36m<span\u001b[39m\n                \u001b[33mstyle\u001b[39m=\u001b[32m\"font-weight: 500;\"\u001b[39m\n              \u001b[36m>\u001b[39m\n                \u001b[0m50, 300\u001b[0m\n              \u001b[36m</span>\u001b[39m\n            \u001b[36m</div>\u001b[39m\n          \u001b[36m</div>\u001b[39m\n        \u001b[36m</div>\u001b[39m\n      \u001b[36m</div>\u001b[39m\n    \u001b[36m</div>\u001b[39m\n  \u001b[36m</body>\u001b[39m\n\u001b[36m</html>\u001b[39m",
              "actual": "undefined",
              "expected": "undefined",
              "constructor": "Function<JestExtendError>",
              "name": "Error",
              "toString": "Function<toString>"
            }
          ]
        },
        {
          "name": "should calculate optimal position when tooltip would overflow multiple edges",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 5. Smart Positioning and Viewport Boundaries > should calculate optimal position when tooltip would overflow multiple edges",
          "state": "passed"
        },
        {
          "name": "should support keyboard navigation and focus management",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 6. Keyboard Accessibility and Screen Reader Support > should support keyboard navigation and focus management",
          "state": "skipped"
        },
        {
          "name": "should provide proper screen reader announcements and ARIA attributes",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 6. Keyboard Accessibility and Screen Reader Support > should provide proper screen reader announcements and ARIA attributes",
          "state": "skipped"
        },
        {
          "name": "should support high contrast mode and accessibility preferences",
          "fullName": "Rich Tooltips Test Suite - Task 0023 > 6. Keyboard Accessibility and Screen Reader Support > should support high contrast mode and accessibility preferences",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/utils/string-helper.test.ts",
      "tests": [
        {
          "name": "should capitalize first letter of a string",
          "fullName": "String Helper Utils > capitalizeFirst > should capitalize first letter of a string",
          "state": "skipped"
        },
        {
          "name": "should handle empty strings",
          "fullName": "String Helper Utils > capitalizeFirst > should handle empty strings",
          "state": "skipped"
        },
        {
          "name": "should handle single character strings",
          "fullName": "String Helper Utils > capitalizeFirst > should handle single character strings",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/utils/math-utils.test.ts",
      "tests": [
        {
          "name": "should add two positive numbers",
          "fullName": "Math Utils > add > should add two positive numbers",
          "state": "skipped"
        },
        {
          "name": "should handle negative numbers",
          "fullName": "Math Utils > add > should handle negative numbers",
          "state": "skipped"
        },
        {
          "name": "should handle zero",
          "fullName": "Math Utils > add > should handle zero",
          "state": "skipped"
        },
        {
          "name": "should divide two numbers correctly",
          "fullName": "Math Utils > divide > should divide two numbers correctly",
          "state": "skipped"
        },
        {
          "name": "should throw error for division by zero",
          "fullName": "Math Utils > divide > should throw error for division by zero",
          "state": "skipped"
        },
        {
          "name": "should handle negative numbers",
          "fullName": "Math Utils > divide > should handle negative numbers",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/utils/calculator.test.ts",
      "tests": [
        {
          "name": "should add two numbers",
          "fullName": "Calculator > should add two numbers",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/canvas-renderer.test.ts",
      "tests": [
        {
          "name": "shouldUseCanvas returns true for large datasets",
          "fullName": "Canvas Renderer Utils > shouldUseCanvas returns true for large datasets",
          "state": "skipped"
        },
        {
          "name": "shouldUseCanvas returns false for small datasets",
          "fullName": "Canvas Renderer Utils > shouldUseCanvas returns false for small datasets",
          "state": "skipped"
        },
        {
          "name": "createRenderer creates appropriate renderer type",
          "fullName": "Canvas Renderer Utils > createRenderer creates appropriate renderer type",
          "state": "skipped"
        },
        {
          "name": "initializes canvas with correct dimensions",
          "fullName": "CanvasLineRenderer > initializes canvas with correct dimensions",
          "state": "skipped"
        },
        {
          "name": "renders data without errors",
          "fullName": "CanvasLineRenderer > renders data without errors",
          "state": "skipped"
        },
        {
          "name": "handles empty data gracefully",
          "fullName": "CanvasLineRenderer > handles empty data gracefully",
          "state": "skipped"
        },
        {
          "name": "samples large datasets",
          "fullName": "CanvasLineRenderer > samples large datasets",
          "state": "skipped"
        },
        {
          "name": "findPointAt returns closest point",
          "fullName": "CanvasLineRenderer > findPointAt returns closest point",
          "state": "skipped"
        },
        {
          "name": "dispose cleans up resources",
          "fullName": "CanvasLineRenderer > dispose cleans up resources",
          "state": "skipped"
        },
        {
          "name": "renders areas with fill",
          "fullName": "CanvasAreaRenderer > renders areas with fill",
          "state": "skipped"
        },
        {
          "name": "inherits line renderer capabilities",
          "fullName": "CanvasAreaRenderer > inherits line renderer capabilities",
          "state": "skipped"
        },
        {
          "name": "measures frame rate correctly",
          "fullName": "CanvasPerformanceMonitor > measures frame rate correctly",
          "state": "skipped"
        },
        {
          "name": "categorizes performance correctly",
          "fullName": "CanvasPerformanceMonitor > categorizes performance correctly",
          "state": "skipped"
        },
        {
          "name": "handles high-frequency data updates",
          "fullName": "Canvas Renderer Integration > handles high-frequency data updates",
          "state": "skipped"
        },
        {
          "name": "maintains quality with different pixel ratios",
          "fullName": "Canvas Renderer Integration > maintains quality with different pixel ratios",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/base-chart-functional.test.ts",
      "tests": [
        {
          "name": "should render BaseChart component",
          "fullName": "BaseChart Functionality > should render BaseChart component",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/base-chart-implementation.test.ts",
      "tests": [
        {
          "name": "should import BaseChart component successfully",
          "fullName": "BaseChart Implementation > should import BaseChart component successfully",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/filtering/chart-filtering.test.tsx",
      "tests": [
        {
          "name": "should render filter components with correct options and default states",
          "fullName": "Chart Filtering and Real-Time Updates > 1. Filter UI Rendering > should render filter components with correct options and default states",
          "state": "skipped"
        },
        {
          "name": "should apply multiple filters simultaneously and update chart data correctly",
          "fullName": "Chart Filtering and Real-Time Updates > 2. Multi-Filter Application > should apply multiple filters simultaneously and update chart data correctly",
          "state": "skipped"
        },
        {
          "name": "should persist and update filter state properly across user interactions",
          "fullName": "Chart Filtering and Real-Time Updates > 3. Filter State Management > should persist and update filter state properly across user interactions",
          "state": "skipped"
        },
        {
          "name": "should re-render chart components within 300ms of filter changes",
          "fullName": "Chart Filtering and Real-Time Updates > 4. Immediate Chart Updates > should re-render chart components within 300ms of filter changes",
          "state": "skipped"
        },
        {
          "name": "should propagate filtered data correctly to all connected chart components",
          "fullName": "Chart Filtering and Real-Time Updates > 5. Data Synchronization > should propagate filtered data correctly to all connected chart components",
          "state": "skipped"
        },
        {
          "name": "should clear filters and return charts to original data state with smooth transitions",
          "fullName": "Chart Filtering and Real-Time Updates > 6. Clear/Reset Functionality > should clear filters and return charts to original data state with smooth transitions",
          "state": "skipped"
        },
        {
          "name": "should maintain filter state consistency during chart interactions like drill-down",
          "fullName": "Chart Filtering and Real-Time Updates > 7. Filter Persistence > should maintain filter state consistency during chart interactions like drill-down",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/accessibility-testing.test.ts",
      "tests": [
        {
          "name": "should have jest-axe integration for automated testing",
          "fullName": "Accessibility Testing Infrastructure > WCAG 2.1 AA Compliance Testing > should have jest-axe integration for automated testing",
          "state": "skipped"
        },
        {
          "name": "should have WCAG compliance test utilities",
          "fullName": "Accessibility Testing Infrastructure > WCAG 2.1 AA Compliance Testing > should have WCAG compliance test utilities",
          "state": "skipped"
        },
        {
          "name": "should have automated accessibility audit runner",
          "fullName": "Accessibility Testing Infrastructure > WCAG 2.1 AA Compliance Testing > should have automated accessibility audit runner",
          "state": "skipped"
        },
        {
          "name": "should have ARIA compliance validator",
          "fullName": "Accessibility Testing Infrastructure > WCAG 2.1 AA Compliance Testing > should have ARIA compliance validator",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation test utilities",
          "fullName": "Accessibility Testing Infrastructure > Keyboard Navigation Testing > should have keyboard navigation test utilities",
          "state": "skipped"
        },
        {
          "name": "should have tab order validation helpers",
          "fullName": "Accessibility Testing Infrastructure > Keyboard Navigation Testing > should have tab order validation helpers",
          "state": "skipped"
        },
        {
          "name": "should have focus management testing",
          "fullName": "Accessibility Testing Infrastructure > Keyboard Navigation Testing > should have focus management testing",
          "state": "skipped"
        },
        {
          "name": "should have keyboard shortcut validation",
          "fullName": "Accessibility Testing Infrastructure > Keyboard Navigation Testing > should have keyboard shortcut validation",
          "state": "skipped"
        },
        {
          "name": "should have screen reader testing utilities",
          "fullName": "Accessibility Testing Infrastructure > Screen Reader Compatibility > should have screen reader testing utilities",
          "state": "skipped"
        },
        {
          "name": "should have NVDA compatibility testing",
          "fullName": "Accessibility Testing Infrastructure > Screen Reader Compatibility > should have NVDA compatibility testing",
          "state": "skipped"
        },
        {
          "name": "should have JAWS compatibility testing",
          "fullName": "Accessibility Testing Infrastructure > Screen Reader Compatibility > should have JAWS compatibility testing",
          "state": "skipped"
        },
        {
          "name": "should have VoiceOver compatibility testing",
          "fullName": "Accessibility Testing Infrastructure > Screen Reader Compatibility > should have VoiceOver compatibility testing",
          "state": "skipped"
        },
        {
          "name": "should have chart accessibility validation",
          "fullName": "Accessibility Testing Infrastructure > Chart-Specific Accessibility Testing > should have chart accessibility validation",
          "state": "skipped"
        },
        {
          "name": "should have data sonification testing",
          "fullName": "Accessibility Testing Infrastructure > Chart-Specific Accessibility Testing > should have data sonification testing",
          "state": "skipped"
        },
        {
          "name": "should have alternative text validation for charts",
          "fullName": "Accessibility Testing Infrastructure > Chart-Specific Accessibility Testing > should have alternative text validation for charts",
          "state": "skipped"
        },
        {
          "name": "should have chart description generator testing",
          "fullName": "Accessibility Testing Infrastructure > Chart-Specific Accessibility Testing > should have chart description generator testing",
          "state": "skipped"
        },
        {
          "name": "should have color contrast validation",
          "fullName": "Accessibility Testing Infrastructure > Color Accessibility Testing > should have color contrast validation",
          "state": "skipped"
        },
        {
          "name": "should have color blindness simulation testing",
          "fullName": "Accessibility Testing Infrastructure > Color Accessibility Testing > should have color blindness simulation testing",
          "state": "skipped"
        },
        {
          "name": "should have high contrast mode validation",
          "fullName": "Accessibility Testing Infrastructure > Color Accessibility Testing > should have high contrast mode validation",
          "state": "skipped"
        },
        {
          "name": "should have pattern-based accessibility fallback testing",
          "fullName": "Accessibility Testing Infrastructure > Color Accessibility Testing > should have pattern-based accessibility fallback testing",
          "state": "skipped"
        },
        {
          "name": "should have touch accessibility validation",
          "fullName": "Accessibility Testing Infrastructure > Mobile Accessibility Testing > should have touch accessibility validation",
          "state": "skipped"
        },
        {
          "name": "should have mobile screen reader testing",
          "fullName": "Accessibility Testing Infrastructure > Mobile Accessibility Testing > should have mobile screen reader testing",
          "state": "skipped"
        },
        {
          "name": "should have gesture accessibility validation",
          "fullName": "Accessibility Testing Infrastructure > Mobile Accessibility Testing > should have gesture accessibility validation",
          "state": "skipped"
        },
        {
          "name": "should have accessibility test reporting",
          "fullName": "Accessibility Testing Infrastructure > Accessibility Testing Utilities > should have accessibility test reporting",
          "state": "skipped"
        },
        {
          "name": "should have accessibility metrics collector",
          "fullName": "Accessibility Testing Infrastructure > Accessibility Testing Utilities > should have accessibility metrics collector",
          "state": "skipped"
        },
        {
          "name": "should have compliance score calculator",
          "fullName": "Accessibility Testing Infrastructure > Accessibility Testing Utilities > should have compliance score calculator",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/animation-simple.test.ts",
      "tests": [
        {
          "name": "should have AnimatedChart component available",
          "fullName": "Chart Animation Framework - Basic Architecture > should have AnimatedChart component available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/brush-selection.test.ts",
      "tests": [
        {
          "name": "initializes with correct default state",
          "fullName": "useBrushSelection Hook > initializes with correct default state",
          "state": "skipped"
        },
        {
          "name": "calculates chart dimensions correctly",
          "fullName": "useBrushSelection Hook > calculates chart dimensions correctly",
          "state": "skipped"
        },
        {
          "name": "handles brush callbacks correctly",
          "fullName": "useBrushSelection Hook > handles brush callbacks correctly",
          "state": "skipped"
        },
        {
          "name": "clears selection when clearSelection is called",
          "fullName": "useBrushSelection Hook > clears selection when clearSelection is called",
          "state": "skipped"
        },
        {
          "name": "handles disabled state correctly",
          "fullName": "useBrushSelection Hook > handles disabled state correctly",
          "state": "skipped"
        },
        {
          "name": "getSelectionDomain converts pixel selection to domain values",
          "fullName": "Brush Selection Integration > getSelectionDomain converts pixel selection to domain values",
          "state": "skipped"
        },
        {
          "name": "getSelectionDomain returns null when no selection",
          "fullName": "Brush Selection Integration > getSelectionDomain returns null when no selection",
          "state": "skipped"
        },
        {
          "name": "handles rapid brush updates efficiently",
          "fullName": "Brush Selection Performance > handles rapid brush updates efficiently",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-responsive.test.ts",
      "tests": [
        {
          "name": "should have ResponsiveBarChart component available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have ResponsiveBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have ResponsiveColumnChart component available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have ResponsiveColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have responsive configuration types available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have responsive configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have breakpoint utilities available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have breakpoint utilities available",
          "state": "skipped"
        },
        {
          "name": "should have responsive chart container available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have responsive chart container available",
          "state": "skipped"
        },
        {
          "name": "should have responsive bar scaling utilities available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have responsive bar scaling utilities available",
          "state": "skipped"
        },
        {
          "name": "should have responsive text utilities available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have responsive text utilities available",
          "state": "skipped"
        },
        {
          "name": "should have viewport size hook available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have viewport size hook available",
          "state": "skipped"
        },
        {
          "name": "should have responsive layout calculator available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have responsive layout calculator available",
          "state": "skipped"
        },
        {
          "name": "should have mobile chart adaptations available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have mobile chart adaptations available",
          "state": "skipped"
        },
        {
          "name": "should have tablet chart adaptations available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have tablet chart adaptations available",
          "state": "skipped"
        },
        {
          "name": "should have desktop chart adaptations available",
          "fullName": "Bar/Column Chart Components - Responsive Design Implementation > should have desktop chart adaptations available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/accessibility-compliance.test.ts",
      "tests": [
        {
          "name": "should have AccessibleChart component available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > ARIA Labels and Roles > should have AccessibleChart component available",
          "state": "skipped"
        },
        {
          "name": "should have accessibility configuration types available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > ARIA Labels and Roles > should have accessibility configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation hooks available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Keyboard Navigation > should have keyboard navigation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have screen reader utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Keyboard Navigation > should have screen reader utilities available",
          "state": "skipped"
        },
        {
          "name": "should have high contrast theme utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Color Accessibility > should have high contrast theme utilities available",
          "state": "skipped"
        },
        {
          "name": "should have colorblind-friendly palette utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Color Accessibility > should have colorblind-friendly palette utilities available",
          "state": "skipped"
        },
        {
          "name": "should have structured markup utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Screen Reader Support > should have structured markup utilities available",
          "state": "skipped"
        },
        {
          "name": "should have live region utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Screen Reader Support > should have live region utilities available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion detection available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Reduced Motion Support > should have reduced motion detection available",
          "state": "skipped"
        },
        {
          "name": "should have touch target utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Touch Accessibility > should have touch target utilities available",
          "state": "skipped"
        },
        {
          "name": "should have voice control utilities available",
          "fullName": "Chart Accessibility Compliance (WCAG 2.1 AA) > Touch Accessibility > should have voice control utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/error-boundary-testing.test.ts",
      "tests": [
        {
          "name": "should have React error boundary testing utilities",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Graceful Failure Scenario Testing > should have React error boundary testing utilities",
          "state": "skipped"
        },
        {
          "name": "should have graceful degradation validator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Graceful Failure Scenario Testing > should have graceful degradation validator",
          "state": "skipped"
        },
        {
          "name": "should have fallback UI testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Graceful Failure Scenario Testing > should have fallback UI testing",
          "state": "skipped"
        },
        {
          "name": "should have error recovery mechanism testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Graceful Failure Scenario Testing > should have error recovery mechanism testing",
          "state": "skipped"
        },
        {
          "name": "should have invalid data scenario generator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Invalid Data Handling Testing > should have invalid data scenario generator",
          "state": "skipped"
        },
        {
          "name": "should have data validation error testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Invalid Data Handling Testing > should have data validation error testing",
          "state": "skipped"
        },
        {
          "name": "should have malformed data handling validator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Invalid Data Handling Testing > should have malformed data handling validator",
          "state": "skipped"
        },
        {
          "name": "should have edge case data testing utilities",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Invalid Data Handling Testing > should have edge case data testing utilities",
          "state": "skipped"
        },
        {
          "name": "should have memory constraint simulator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Memory Constraint Scenario Testing > should have memory constraint simulator",
          "state": "skipped"
        },
        {
          "name": "should have out-of-memory scenario testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Memory Constraint Scenario Testing > should have out-of-memory scenario testing",
          "state": "skipped"
        },
        {
          "name": "should have memory pressure testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Memory Constraint Scenario Testing > should have memory pressure testing",
          "state": "skipped"
        },
        {
          "name": "should have large dataset memory handling validator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Memory Constraint Scenario Testing > should have large dataset memory handling validator",
          "state": "skipped"
        },
        {
          "name": "should have network failure simulator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Network Failure Resilience Testing > should have network failure simulator",
          "state": "skipped"
        },
        {
          "name": "should have offline mode testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Network Failure Resilience Testing > should have offline mode testing",
          "state": "skipped"
        },
        {
          "name": "should have slow network condition testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Network Failure Resilience Testing > should have slow network condition testing",
          "state": "skipped"
        },
        {
          "name": "should have API timeout handling validator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Network Failure Resilience Testing > should have API timeout handling validator",
          "state": "skipped"
        },
        {
          "name": "should have customer data isolation breach detector",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Customer Data Isolation Breach Prevention > should have customer data isolation breach detector",
          "state": "skipped"
        },
        {
          "name": "should have cross-customer data contamination testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Customer Data Isolation Breach Prevention > should have cross-customer data contamination testing",
          "state": "skipped"
        },
        {
          "name": "should have unauthorized access prevention testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Customer Data Isolation Breach Prevention > should have unauthorized access prevention testing",
          "state": "skipped"
        },
        {
          "name": "should have data security validation",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Customer Data Isolation Breach Prevention > should have data security validation",
          "state": "skipped"
        },
        {
          "name": "should have chart rendering error testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Chart-Specific Error Scenarios > should have chart rendering error testing",
          "state": "skipped"
        },
        {
          "name": "should have D3.js error handling validator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Chart-Specific Error Scenarios > should have D3.js error handling validator",
          "state": "skipped"
        },
        {
          "name": "should have SVG manipulation error testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Chart-Specific Error Scenarios > should have SVG manipulation error testing",
          "state": "skipped"
        },
        {
          "name": "should have animation error recovery testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Chart-Specific Error Scenarios > should have animation error recovery testing",
          "state": "skipped"
        },
        {
          "name": "should have legacy browser fallback testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Browser Compatibility Edge Cases > should have legacy browser fallback testing",
          "state": "skipped"
        },
        {
          "name": "should have feature detection error handling",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Browser Compatibility Edge Cases > should have feature detection error handling",
          "state": "skipped"
        },
        {
          "name": "should have polyfill failure testing",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Browser Compatibility Edge Cases > should have polyfill failure testing",
          "state": "skipped"
        },
        {
          "name": "should have error scenario orchestrator",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Error Boundary Testing Utilities > should have error scenario orchestrator",
          "state": "skipped"
        },
        {
          "name": "should have error boundary metrics collector",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Error Boundary Testing Utilities > should have error boundary metrics collector",
          "state": "skipped"
        },
        {
          "name": "should have resilience testing reporter",
          "fullName": "Error Boundary and Edge Case Testing Infrastructure > Error Boundary Testing Utilities > should have resilience testing reporter",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-accessibility.test.ts",
      "tests": [
        {
          "name": "should have AccessibleBarChart component available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have AccessibleBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AccessibleColumnChart component available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have AccessibleColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have ARIA label utilities available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have ARIA label utilities available",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation implementation available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have keyboard navigation implementation available",
          "state": "skipped"
        },
        {
          "name": "should have screen reader utilities available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have screen reader utilities available",
          "state": "skipped"
        },
        {
          "name": "should have color contrast utilities available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have color contrast utilities available",
          "state": "skipped"
        },
        {
          "name": "should have high contrast mode support available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have high contrast mode support available",
          "state": "skipped"
        },
        {
          "name": "should have data table alternative available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have data table alternative available",
          "state": "skipped"
        },
        {
          "name": "should have focus indicators available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have focus indicators available",
          "state": "skipped"
        },
        {
          "name": "should have accessible chart patterns available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have accessible chart patterns available",
          "state": "skipped"
        },
        {
          "name": "should have audio description utilities available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have audio description utilities available",
          "state": "skipped"
        },
        {
          "name": "should have accessibility configuration types available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have accessibility configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have accessibility testing utilities available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have accessibility testing utilities available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion preferences support available",
          "fullName": "Bar/Column Chart Components - Accessibility (WCAG 2.1 AA) Implementation > should have reduced motion preferences support available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/performance-benchmarking.test.ts",
      "tests": [
        {
          "name": "should have render time measurement utilities",
          "fullName": "Performance Benchmarking Infrastructure > Render Performance Testing > should have render time measurement utilities",
          "state": "skipped"
        },
        {
          "name": "should have chart initialization benchmarking",
          "fullName": "Performance Benchmarking Infrastructure > Render Performance Testing > should have chart initialization benchmarking",
          "state": "skipped"
        },
        {
          "name": "should have data update performance testing",
          "fullName": "Performance Benchmarking Infrastructure > Render Performance Testing > should have data update performance testing",
          "state": "skipped"
        },
        {
          "name": "should have first meaningful paint measurement",
          "fullName": "Performance Benchmarking Infrastructure > Render Performance Testing > should have first meaningful paint measurement",
          "state": "skipped"
        },
        {
          "name": "should have memory leak detection utilities",
          "fullName": "Performance Benchmarking Infrastructure > Memory Leak Detection > should have memory leak detection utilities",
          "state": "skipped"
        },
        {
          "name": "should have heap snapshot comparison tools",
          "fullName": "Performance Benchmarking Infrastructure > Memory Leak Detection > should have heap snapshot comparison tools",
          "state": "skipped"
        },
        {
          "name": "should have DOM node leak detection",
          "fullName": "Performance Benchmarking Infrastructure > Memory Leak Detection > should have DOM node leak detection",
          "state": "skipped"
        },
        {
          "name": "should have event listener cleanup validation",
          "fullName": "Performance Benchmarking Infrastructure > Memory Leak Detection > should have event listener cleanup validation",
          "state": "skipped"
        },
        {
          "name": "should have animation frame rate measurement",
          "fullName": "Performance Benchmarking Infrastructure > Animation Performance Testing > should have animation frame rate measurement",
          "state": "skipped"
        },
        {
          "name": "should have 60fps validation utilities",
          "fullName": "Performance Benchmarking Infrastructure > Animation Performance Testing > should have 60fps validation utilities",
          "state": "skipped"
        },
        {
          "name": "should have animation stuttering detection",
          "fullName": "Performance Benchmarking Infrastructure > Animation Performance Testing > should have animation stuttering detection",
          "state": "skipped"
        },
        {
          "name": "should have GPU acceleration validation",
          "fullName": "Performance Benchmarking Infrastructure > Animation Performance Testing > should have GPU acceleration validation",
          "state": "skipped"
        },
        {
          "name": "should have large dataset benchmarking utilities",
          "fullName": "Performance Benchmarking Infrastructure > Large Dataset Performance > should have large dataset benchmarking utilities",
          "state": "skipped"
        },
        {
          "name": "should have virtualization performance testing",
          "fullName": "Performance Benchmarking Infrastructure > Large Dataset Performance > should have virtualization performance testing",
          "state": "skipped"
        },
        {
          "name": "should have data aggregation performance measurement",
          "fullName": "Performance Benchmarking Infrastructure > Large Dataset Performance > should have data aggregation performance measurement",
          "state": "skipped"
        },
        {
          "name": "should have streaming data performance testing",
          "fullName": "Performance Benchmarking Infrastructure > Large Dataset Performance > should have streaming data performance testing",
          "state": "skipped"
        },
        {
          "name": "should have bundle size analysis utilities",
          "fullName": "Performance Benchmarking Infrastructure > Bundle Size and Tree-Shaking > should have bundle size analysis utilities",
          "state": "skipped"
        },
        {
          "name": "should have tree-shaking validation",
          "fullName": "Performance Benchmarking Infrastructure > Bundle Size and Tree-Shaking > should have tree-shaking validation",
          "state": "skipped"
        },
        {
          "name": "should have code splitting performance testing",
          "fullName": "Performance Benchmarking Infrastructure > Bundle Size and Tree-Shaking > should have code splitting performance testing",
          "state": "skipped"
        },
        {
          "name": "should have lazy loading performance validation",
          "fullName": "Performance Benchmarking Infrastructure > Bundle Size and Tree-Shaking > should have lazy loading performance validation",
          "state": "skipped"
        },
        {
          "name": "should have multi-customer performance isolation testing",
          "fullName": "Performance Benchmarking Infrastructure > Enterprise-Scale Performance > should have multi-customer performance isolation testing",
          "state": "skipped"
        },
        {
          "name": "should have concurrent user simulation",
          "fullName": "Performance Benchmarking Infrastructure > Enterprise-Scale Performance > should have concurrent user simulation",
          "state": "skipped"
        },
        {
          "name": "should have performance degradation detection",
          "fullName": "Performance Benchmarking Infrastructure > Enterprise-Scale Performance > should have performance degradation detection",
          "state": "skipped"
        },
        {
          "name": "should have scalability benchmarking",
          "fullName": "Performance Benchmarking Infrastructure > Enterprise-Scale Performance > should have scalability benchmarking",
          "state": "skipped"
        },
        {
          "name": "should have performance metrics collector",
          "fullName": "Performance Benchmarking Infrastructure > Performance Testing Utilities > should have performance metrics collector",
          "state": "skipped"
        },
        {
          "name": "should have performance baseline manager",
          "fullName": "Performance Benchmarking Infrastructure > Performance Testing Utilities > should have performance baseline manager",
          "state": "skipped"
        },
        {
          "name": "should have performance regression detector",
          "fullName": "Performance Benchmarking Infrastructure > Performance Testing Utilities > should have performance regression detector",
          "state": "skipped"
        },
        {
          "name": "should have performance reporting utilities",
          "fullName": "Performance Benchmarking Infrastructure > Performance Testing Utilities > should have performance reporting utilities",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/documentation-testing.test.ts",
      "tests": [
        {
          "name": "should have JSDoc coverage analyzer",
          "fullName": "Documentation Testing Infrastructure > TypeScript JSDoc Coverage > should have JSDoc coverage analyzer",
          "state": "skipped"
        },
        {
          "name": "should have IntelliSense documentation validator",
          "fullName": "Documentation Testing Infrastructure > TypeScript JSDoc Coverage > should have IntelliSense documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have TypeScript documentation completeness checker",
          "fullName": "Documentation Testing Infrastructure > TypeScript JSDoc Coverage > should have TypeScript documentation completeness checker",
          "state": "skipped"
        },
        {
          "name": "should have documentation formatting validator",
          "fullName": "Documentation Testing Infrastructure > TypeScript JSDoc Coverage > should have documentation formatting validator",
          "state": "skipped"
        },
        {
          "name": "should have code example compilation tester",
          "fullName": "Documentation Testing Infrastructure > Code Example Validation > should have code example compilation tester",
          "state": "skipped"
        },
        {
          "name": "should have example accuracy validator",
          "fullName": "Documentation Testing Infrastructure > Code Example Validation > should have example accuracy validator",
          "state": "skipped"
        },
        {
          "name": "should have interactive example tester",
          "fullName": "Documentation Testing Infrastructure > Code Example Validation > should have interactive example tester",
          "state": "skipped"
        },
        {
          "name": "should have code snippet synchronization validator",
          "fullName": "Documentation Testing Infrastructure > Code Example Validation > should have code snippet synchronization validator",
          "state": "skipped"
        },
        {
          "name": "should have API documentation generator",
          "fullName": "Documentation Testing Infrastructure > API Documentation Completeness > should have API documentation generator",
          "state": "skipped"
        },
        {
          "name": "should have parameter documentation validator",
          "fullName": "Documentation Testing Infrastructure > API Documentation Completeness > should have parameter documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have return type documentation checker",
          "fullName": "Documentation Testing Infrastructure > API Documentation Completeness > should have return type documentation checker",
          "state": "skipped"
        },
        {
          "name": "should have interface documentation validator",
          "fullName": "Documentation Testing Infrastructure > API Documentation Completeness > should have interface documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have usage guideline accuracy validator",
          "fullName": "Documentation Testing Infrastructure > Usage Guidelines Testing > should have usage guideline accuracy validator",
          "state": "skipped"
        },
        {
          "name": "should have best practices documentation checker",
          "fullName": "Documentation Testing Infrastructure > Usage Guidelines Testing > should have best practices documentation checker",
          "state": "skipped"
        },
        {
          "name": "should have performance guidelines validator",
          "fullName": "Documentation Testing Infrastructure > Usage Guidelines Testing > should have performance guidelines validator",
          "state": "skipped"
        },
        {
          "name": "should have accessibility guidelines checker",
          "fullName": "Documentation Testing Infrastructure > Usage Guidelines Testing > should have accessibility guidelines checker",
          "state": "skipped"
        },
        {
          "name": "should have customer isolation documentation validator",
          "fullName": "Documentation Testing Infrastructure > Multi-Tenant Documentation > should have customer isolation documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have multi-tenant pattern documentation checker",
          "fullName": "Documentation Testing Infrastructure > Multi-Tenant Documentation > should have multi-tenant pattern documentation checker",
          "state": "skipped"
        },
        {
          "name": "should have customer data security documentation validator",
          "fullName": "Documentation Testing Infrastructure > Multi-Tenant Documentation > should have customer data security documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have chart component documentation validator",
          "fullName": "Documentation Testing Infrastructure > Chart-Specific Documentation > should have chart component documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have chart configuration documentation checker",
          "fullName": "Documentation Testing Infrastructure > Chart-Specific Documentation > should have chart configuration documentation checker",
          "state": "skipped"
        },
        {
          "name": "should have chart interaction documentation validator",
          "fullName": "Documentation Testing Infrastructure > Chart-Specific Documentation > should have chart interaction documentation validator",
          "state": "skipped"
        },
        {
          "name": "should have chart customization guide validator",
          "fullName": "Documentation Testing Infrastructure > Chart-Specific Documentation > should have chart customization guide validator",
          "state": "skipped"
        },
        {
          "name": "should have automated documentation generator",
          "fullName": "Documentation Testing Infrastructure > Documentation Generation and Automation > should have automated documentation generator",
          "state": "skipped"
        },
        {
          "name": "should have documentation synchronization validator",
          "fullName": "Documentation Testing Infrastructure > Documentation Generation and Automation > should have documentation synchronization validator",
          "state": "skipped"
        },
        {
          "name": "should have documentation build pipeline tester",
          "fullName": "Documentation Testing Infrastructure > Documentation Generation and Automation > should have documentation build pipeline tester",
          "state": "skipped"
        },
        {
          "name": "should have documentation quality metrics collector",
          "fullName": "Documentation Testing Infrastructure > Documentation Generation and Automation > should have documentation quality metrics collector",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-accessibility.test.ts",
      "tests": [
        {
          "name": "should have accessible line chart components available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have accessible line chart components available",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation for line charts available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have keyboard navigation for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have screen reader support for time series available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have screen reader support for time series available",
          "state": "skipped"
        },
        {
          "name": "should have ARIA labels for line chart elements available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have ARIA labels for line chart elements available",
          "state": "skipped"
        },
        {
          "name": "should have high contrast mode support available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have high contrast mode support available",
          "state": "skipped"
        },
        {
          "name": "should have focus indicators for chart interactions available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have focus indicators for chart interactions available",
          "state": "skipped"
        },
        {
          "name": "should have semantic markup for line charts available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have semantic markup for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have alternative data table representation available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have alternative data table representation available",
          "state": "skipped"
        },
        {
          "name": "should have voice control integration available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have voice control integration available",
          "state": "skipped"
        },
        {
          "name": "should have color accessibility validation available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have color accessibility validation available",
          "state": "skipped"
        },
        {
          "name": "should have assistive technology announcements available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have assistive technology announcements available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion support for line charts available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have reduced motion support for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have tactile feedback integration available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have tactile feedback integration available",
          "state": "skipped"
        },
        {
          "name": "should have accessibility testing utilities available",
          "fullName": "Line/Area Chart Components - Accessibility (WCAG 2.1 AA) > should have accessibility testing utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/storybook-infrastructure.test.ts",
      "tests": [
        {
          "name": "should have story completeness validator",
          "fullName": "Storybook Infrastructure Testing > Story Completeness Validation > should have story completeness validator",
          "state": "skipped"
        },
        {
          "name": "should have comprehensive chart story coverage",
          "fullName": "Storybook Infrastructure Testing > Story Completeness Validation > should have comprehensive chart story coverage",
          "state": "skipped"
        },
        {
          "name": "should have story metadata validation",
          "fullName": "Storybook Infrastructure Testing > Story Completeness Validation > should have story metadata validation",
          "state": "skipped"
        },
        {
          "name": "should have missing story detection",
          "fullName": "Storybook Infrastructure Testing > Story Completeness Validation > should have missing story detection",
          "state": "skipped"
        },
        {
          "name": "should have control functionality validator",
          "fullName": "Storybook Infrastructure Testing > Interactive Controls Testing > should have control functionality validator",
          "state": "skipped"
        },
        {
          "name": "should have args mapping validation",
          "fullName": "Storybook Infrastructure Testing > Interactive Controls Testing > should have args mapping validation",
          "state": "skipped"
        },
        {
          "name": "should have control type validation",
          "fullName": "Storybook Infrastructure Testing > Interactive Controls Testing > should have control type validation",
          "state": "skipped"
        },
        {
          "name": "should have real-time control testing",
          "fullName": "Storybook Infrastructure Testing > Interactive Controls Testing > should have real-time control testing",
          "state": "skipped"
        },
        {
          "name": "should have code example validation",
          "fullName": "Storybook Infrastructure Testing > Documentation Accuracy Testing > should have code example validation",
          "state": "skipped"
        },
        {
          "name": "should have API documentation completeness checker",
          "fullName": "Storybook Infrastructure Testing > Documentation Accuracy Testing > should have API documentation completeness checker",
          "state": "skipped"
        },
        {
          "name": "should have documentation compilation tester",
          "fullName": "Storybook Infrastructure Testing > Documentation Accuracy Testing > should have documentation compilation tester",
          "state": "skipped"
        },
        {
          "name": "should have example code execution validator",
          "fullName": "Storybook Infrastructure Testing > Documentation Accuracy Testing > should have example code execution validator",
          "state": "skipped"
        },
        {
          "name": "should have accessibility story validator",
          "fullName": "Storybook Infrastructure Testing > Accessibility Story Coverage > should have accessibility story validator",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation story coverage",
          "fullName": "Storybook Infrastructure Testing > Accessibility Story Coverage > should have keyboard navigation story coverage",
          "state": "skipped"
        },
        {
          "name": "should have screen reader story validation",
          "fullName": "Storybook Infrastructure Testing > Accessibility Story Coverage > should have screen reader story validation",
          "state": "skipped"
        },
        {
          "name": "should have high contrast story coverage",
          "fullName": "Storybook Infrastructure Testing > Accessibility Story Coverage > should have high contrast story coverage",
          "state": "skipped"
        },
        {
          "name": "should have performance story validation",
          "fullName": "Storybook Infrastructure Testing > Performance Benchmark Stories > should have performance story validation",
          "state": "skipped"
        },
        {
          "name": "should have large dataset story coverage",
          "fullName": "Storybook Infrastructure Testing > Performance Benchmark Stories > should have large dataset story coverage",
          "state": "skipped"
        },
        {
          "name": "should have animation performance story validation",
          "fullName": "Storybook Infrastructure Testing > Performance Benchmark Stories > should have animation performance story validation",
          "state": "skipped"
        },
        {
          "name": "should have memory usage story benchmarking",
          "fullName": "Storybook Infrastructure Testing > Performance Benchmark Stories > should have memory usage story benchmarking",
          "state": "skipped"
        },
        {
          "name": "should have Storybook build configuration",
          "fullName": "Storybook Infrastructure Testing > Storybook Build and Deployment > should have Storybook build configuration",
          "state": "skipped"
        },
        {
          "name": "should have preview configuration validation",
          "fullName": "Storybook Infrastructure Testing > Storybook Build and Deployment > should have preview configuration validation",
          "state": "skipped"
        },
        {
          "name": "should have addon configuration validation",
          "fullName": "Storybook Infrastructure Testing > Storybook Build and Deployment > should have addon configuration validation",
          "state": "skipped"
        },
        {
          "name": "should have build optimization testing",
          "fullName": "Storybook Infrastructure Testing > Storybook Build and Deployment > should have build optimization testing",
          "state": "skipped"
        },
        {
          "name": "should have story testing framework",
          "fullName": "Storybook Infrastructure Testing > Storybook Testing Utilities > should have story testing framework",
          "state": "skipped"
        },
        {
          "name": "should have automated story generation",
          "fullName": "Storybook Infrastructure Testing > Storybook Testing Utilities > should have automated story generation",
          "state": "skipped"
        },
        {
          "name": "should have story quality metrics",
          "fullName": "Storybook Infrastructure Testing > Storybook Testing Utilities > should have story quality metrics",
          "state": "skipped"
        },
        {
          "name": "should have Storybook test reporting",
          "fullName": "Storybook Infrastructure Testing > Storybook Testing Utilities > should have Storybook test reporting",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-core.test.ts",
      "tests": [
        {
          "name": "should have BarChart component available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have BarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have ColumnChart component available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have ColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have BarChartConfig interface available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have BarChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have ColumnChartConfig interface available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have ColumnChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have useBarChart hook available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have useBarChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have useColumnChart hook available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have useColumnChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have bar chart utilities available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have bar chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have column chart utilities available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have column chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have bar chart data transformers available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have bar chart data transformers available",
          "state": "skipped"
        },
        {
          "name": "should have chart orientation helpers available",
          "fullName": "Bar/Column Chart Components - Core Implementation > should have chart orientation helpers available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/end-to-end-testing.test.ts",
      "tests": [
        {
          "name": "should have E2E test framework configuration",
          "fullName": "End-to-End Testing Infrastructure > Complete User Workflow Testing > should have E2E test framework configuration",
          "state": "skipped"
        },
        {
          "name": "should have Playwright testing setup",
          "fullName": "End-to-End Testing Infrastructure > Complete User Workflow Testing > should have Playwright testing setup",
          "state": "skipped"
        },
        {
          "name": "should have Cypress testing configuration",
          "fullName": "End-to-End Testing Infrastructure > Complete User Workflow Testing > should have Cypress testing configuration",
          "state": "skipped"
        },
        {
          "name": "should have user workflow orchestrator",
          "fullName": "End-to-End Testing Infrastructure > Complete User Workflow Testing > should have user workflow orchestrator",
          "state": "skipped"
        },
        {
          "name": "should have dashboard creation E2E tests",
          "fullName": "End-to-End Testing Infrastructure > Dashboard Creation and Chart Embedding > should have dashboard creation E2E tests",
          "state": "skipped"
        },
        {
          "name": "should have chart embedding workflow testing",
          "fullName": "End-to-End Testing Infrastructure > Dashboard Creation and Chart Embedding > should have chart embedding workflow testing",
          "state": "skipped"
        },
        {
          "name": "should have drag-and-drop chart placement testing",
          "fullName": "End-to-End Testing Infrastructure > Dashboard Creation and Chart Embedding > should have drag-and-drop chart placement testing",
          "state": "skipped"
        },
        {
          "name": "should have dashboard layout persistence testing",
          "fullName": "End-to-End Testing Infrastructure > Dashboard Creation and Chart Embedding > should have dashboard layout persistence testing",
          "state": "skipped"
        },
        {
          "name": "should have customer switching E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Customer Switching Scenarios > should have customer switching E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have multi-tenant data isolation E2E validation",
          "fullName": "End-to-End Testing Infrastructure > Customer Switching Scenarios > should have multi-tenant data isolation E2E validation",
          "state": "skipped"
        },
        {
          "name": "should have customer context persistence testing",
          "fullName": "End-to-End Testing Infrastructure > Customer Switching Scenarios > should have customer context persistence testing",
          "state": "skipped"
        },
        {
          "name": "should have customer data security E2E validation",
          "fullName": "End-to-End Testing Infrastructure > Customer Switching Scenarios > should have customer data security E2E validation",
          "state": "skipped"
        },
        {
          "name": "should have data export E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Data Export Functionality > should have data export E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have chart image export testing",
          "fullName": "End-to-End Testing Infrastructure > Data Export Functionality > should have chart image export testing",
          "state": "skipped"
        },
        {
          "name": "should have PDF report generation E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Data Export Functionality > should have PDF report generation E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have CSV data export validation",
          "fullName": "End-to-End Testing Infrastructure > Data Export Functionality > should have CSV data export validation",
          "state": "skipped"
        },
        {
          "name": "should have chart customization E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Chart Customization Workflows > should have chart customization E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have theme switching workflow testing",
          "fullName": "End-to-End Testing Infrastructure > Chart Customization Workflows > should have theme switching workflow testing",
          "state": "skipped"
        },
        {
          "name": "should have chart configuration persistence testing",
          "fullName": "End-to-End Testing Infrastructure > Chart Customization Workflows > should have chart configuration persistence testing",
          "state": "skipped"
        },
        {
          "name": "should have real-time chart updates E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Chart Customization Workflows > should have real-time chart updates E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have authentication flow E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Authentication and Authorization Flows > should have authentication flow E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have JWT token handling E2E validation",
          "fullName": "End-to-End Testing Infrastructure > Authentication and Authorization Flows > should have JWT token handling E2E validation",
          "state": "skipped"
        },
        {
          "name": "should have role-based access control E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Authentication and Authorization Flows > should have role-based access control E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have session management E2E validation",
          "fullName": "End-to-End Testing Infrastructure > Authentication and Authorization Flows > should have session management E2E validation",
          "state": "skipped"
        },
        {
          "name": "should have performance E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Performance and Load Testing > should have performance E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have load testing simulation",
          "fullName": "End-to-End Testing Infrastructure > Performance and Load Testing > should have load testing simulation",
          "state": "skipped"
        },
        {
          "name": "should have concurrent user E2E testing",
          "fullName": "End-to-End Testing Infrastructure > Performance and Load Testing > should have concurrent user E2E testing",
          "state": "skipped"
        },
        {
          "name": "should have scalability E2E validation",
          "fullName": "End-to-End Testing Infrastructure > Performance and Load Testing > should have scalability E2E validation",
          "state": "skipped"
        },
        {
          "name": "should have E2E test data management",
          "fullName": "End-to-End Testing Infrastructure > E2E Testing Utilities > should have E2E test data management",
          "state": "skipped"
        },
        {
          "name": "should have E2E test environment setup",
          "fullName": "End-to-End Testing Infrastructure > E2E Testing Utilities > should have E2E test environment setup",
          "state": "skipped"
        },
        {
          "name": "should have E2E test reporting",
          "fullName": "End-to-End Testing Infrastructure > E2E Testing Utilities > should have E2E test reporting",
          "state": "skipped"
        },
        {
          "name": "should have cross-browser E2E testing",
          "fullName": "End-to-End Testing Infrastructure > E2E Testing Utilities > should have cross-browser E2E testing",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-performance.test.ts",
      "tests": [
        {
          "name": "should have PerformantBarChart component available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have PerformantBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have PerformantColumnChart component available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have PerformantColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have render performance monitor available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have render performance monitor available",
          "state": "skipped"
        },
        {
          "name": "should have memory usage tracker available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have memory usage tracker available",
          "state": "skipped"
        },
        {
          "name": "should have data virtualization utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have data virtualization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have throttled update utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have throttled update utilities available",
          "state": "skipped"
        },
        {
          "name": "should have canvas rendering fallback available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have canvas rendering fallback available",
          "state": "skipped"
        },
        {
          "name": "should have WebGL rendering utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have WebGL rendering utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance benchmarking utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have performance benchmarking utilities available",
          "state": "skipped"
        },
        {
          "name": "should have lazy loading utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have lazy loading utilities available",
          "state": "skipped"
        },
        {
          "name": "should have data chunking utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have data chunking utilities available",
          "state": "skipped"
        },
        {
          "name": "should have progressive rendering utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have progressive rendering utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance configuration types available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have performance configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have FPS monitoring utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have FPS monitoring utilities available",
          "state": "skipped"
        },
        {
          "name": "should have resource cleanup utilities available",
          "fullName": "Bar/Column Chart Components - Performance Requirements Implementation > should have resource cleanup utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/time-series-specialization.test.ts",
      "tests": [
        {
          "name": "should have d3.scaleTime() integration available",
          "fullName": "Time-Series Chart Specialization > should have d3.scaleTime() integration available",
          "state": "skipped"
        },
        {
          "name": "should have intelligent date formatting system available",
          "fullName": "Time-Series Chart Specialization > should have intelligent date formatting system available",
          "state": "skipped"
        },
        {
          "name": "should have adaptive point density system available",
          "fullName": "Time-Series Chart Specialization > should have adaptive point density system available",
          "state": "skipped"
        },
        {
          "name": "should have time range utilities available",
          "fullName": "Time-Series Chart Specialization > should have time range utilities available",
          "state": "skipped"
        },
        {
          "name": "should have time axis optimization available",
          "fullName": "Time-Series Chart Specialization > should have time axis optimization available",
          "state": "skipped"
        },
        {
          "name": "should have time-based data grouping available",
          "fullName": "Time-Series Chart Specialization > should have time-based data grouping available",
          "state": "skipped"
        },
        {
          "name": "should have timezone handling support available",
          "fullName": "Time-Series Chart Specialization > should have timezone handling support available",
          "state": "skipped"
        },
        {
          "name": "should have fiscal year support available",
          "fullName": "Time-Series Chart Specialization > should have fiscal year support available",
          "state": "skipped"
        },
        {
          "name": "should have seasonal pattern detection available",
          "fullName": "Time-Series Chart Specialization > should have seasonal pattern detection available",
          "state": "skipped"
        },
        {
          "name": "should have time series interpolation available",
          "fullName": "Time-Series Chart Specialization > should have time series interpolation available",
          "state": "skipped"
        },
        {
          "name": "should have learning analytics time patterns available",
          "fullName": "Time-Series Chart Specialization > should have learning analytics time patterns available",
          "state": "skipped"
        },
        {
          "name": "should have time performance optimization available",
          "fullName": "Time-Series Chart Specialization > should have time performance optimization available",
          "state": "skipped"
        },
        {
          "name": "should have real-time data handling available",
          "fullName": "Time-Series Chart Specialization > should have real-time data handling available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-animations.test.ts",
      "tests": [
        {
          "name": "should have AnimatedPieChart component available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have AnimatedPieChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AnimatedDonutChart component available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have AnimatedDonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have pie animation configuration types available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have pie animation configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart animation hooks available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have pie chart animation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have donut chart animation hooks available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have donut chart animation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have D3 arc transition utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have D3 arc transition utilities available",
          "state": "skipped"
        },
        {
          "name": "should have enter animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have enter animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have update animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have update animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have exit animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have exit animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have hover animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have hover animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have rotation animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have rotation animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have loading animation utilities available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have loading animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have elastic easing functions available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have elastic easing functions available",
          "state": "skipped"
        },
        {
          "name": "should have animation performance monitoring available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have animation performance monitoring available",
          "state": "skipped"
        },
        {
          "name": "should have center content animations available",
          "fullName": "Pie/Donut Chart Components - Animation Framework Implementation > should have center content animations available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-advanced-features.test.ts",
      "tests": [
        {
          "name": "should have smart label positioning algorithms available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have smart label positioning algorithms available",
          "state": "skipped"
        },
        {
          "name": "should have small slice handling utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have small slice handling utilities available",
          "state": "skipped"
        },
        {
          "name": "should have center content management utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have center content management utilities available",
          "state": "skipped"
        },
        {
          "name": "should have drill-down navigation system available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have drill-down navigation system available",
          "state": "skipped"
        },
        {
          "name": "should have multi-level data hierarchy support available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have multi-level data hierarchy support available",
          "state": "skipped"
        },
        {
          "name": "should have dynamic color scheme generation available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have dynamic color scheme generation available",
          "state": "skipped"
        },
        {
          "name": "should have data filtering and search utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have data filtering and search utilities available",
          "state": "skipped"
        },
        {
          "name": "should have export and sharing utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have export and sharing utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation sequence control available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have animation sequence control available",
          "state": "skipped"
        },
        {
          "name": "should have contextual menu system available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have contextual menu system available",
          "state": "skipped"
        },
        {
          "name": "should have data annotation utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have data annotation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have comparison mode utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have comparison mode utilities available",
          "state": "skipped"
        },
        {
          "name": "should have state persistence utilities available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have state persistence utilities available",
          "state": "skipped"
        },
        {
          "name": "should have advanced tooltip customization available",
          "fullName": "Pie/Donut Chart Components - Advanced Features Implementation > should have advanced tooltip customization available",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/visual-regression-testing.test.ts",
      "tests": [
        {
          "name": "should have Chromatic integration configuration",
          "fullName": "Visual Regression Testing Infrastructure > Cross-Browser Compatibility Testing > should have Chromatic integration configuration",
          "state": "skipped"
        },
        {
          "name": "should have Percy visual testing setup",
          "fullName": "Visual Regression Testing Infrastructure > Cross-Browser Compatibility Testing > should have Percy visual testing setup",
          "state": "skipped"
        },
        {
          "name": "should have browser compatibility test matrix",
          "fullName": "Visual Regression Testing Infrastructure > Cross-Browser Compatibility Testing > should have browser compatibility test matrix",
          "state": "skipped"
        },
        {
          "name": "should have cross-browser screenshot comparison utilities",
          "fullName": "Visual Regression Testing Infrastructure > Cross-Browser Compatibility Testing > should have cross-browser screenshot comparison utilities",
          "state": "skipped"
        },
        {
          "name": "should have animation timeline validation",
          "fullName": "Visual Regression Testing Infrastructure > Animation Consistency Testing > should have animation timeline validation",
          "state": "skipped"
        },
        {
          "name": "should have frame-by-frame animation testing",
          "fullName": "Visual Regression Testing Infrastructure > Animation Consistency Testing > should have frame-by-frame animation testing",
          "state": "skipped"
        },
        {
          "name": "should have animation performance validation",
          "fullName": "Visual Regression Testing Infrastructure > Animation Consistency Testing > should have animation performance validation",
          "state": "skipped"
        },
        {
          "name": "should have cross-chart animation synchronization testing",
          "fullName": "Visual Regression Testing Infrastructure > Animation Consistency Testing > should have cross-chart animation synchronization testing",
          "state": "skipped"
        },
        {
          "name": "should have responsive breakpoint visual testing",
          "fullName": "Visual Regression Testing Infrastructure > Responsive Behavior Validation > should have responsive breakpoint visual testing",
          "state": "skipped"
        },
        {
          "name": "should have container query validation",
          "fullName": "Visual Regression Testing Infrastructure > Responsive Behavior Validation > should have container query validation",
          "state": "skipped"
        },
        {
          "name": "should have mobile viewport validation",
          "fullName": "Visual Regression Testing Infrastructure > Responsive Behavior Validation > should have mobile viewport validation",
          "state": "skipped"
        },
        {
          "name": "should have tablet viewport validation",
          "fullName": "Visual Regression Testing Infrastructure > Responsive Behavior Validation > should have tablet viewport validation",
          "state": "skipped"
        },
        {
          "name": "should have theme switching visual validation",
          "fullName": "Visual Regression Testing Infrastructure > Theme Visual Consistency > should have theme switching visual validation",
          "state": "skipped"
        },
        {
          "name": "should have color contrast visual testing",
          "fullName": "Visual Regression Testing Infrastructure > Theme Visual Consistency > should have color contrast visual testing",
          "state": "skipped"
        },
        {
          "name": "should have high contrast mode validation",
          "fullName": "Visual Regression Testing Infrastructure > Theme Visual Consistency > should have high contrast mode validation",
          "state": "skipped"
        },
        {
          "name": "should have pixel-perfect chart rendering tests",
          "fullName": "Visual Regression Testing Infrastructure > Chart Rendering Validation > should have pixel-perfect chart rendering tests",
          "state": "skipped"
        },
        {
          "name": "should have SVG rendering validation",
          "fullName": "Visual Regression Testing Infrastructure > Chart Rendering Validation > should have SVG rendering validation",
          "state": "skipped"
        },
        {
          "name": "should have canvas fallback testing",
          "fullName": "Visual Regression Testing Infrastructure > Chart Rendering Validation > should have canvas fallback testing",
          "state": "skipped"
        },
        {
          "name": "should have chart scaling validation",
          "fullName": "Visual Regression Testing Infrastructure > Chart Rendering Validation > should have chart scaling validation",
          "state": "skipped"
        },
        {
          "name": "should have visual diff analysis tools",
          "fullName": "Visual Regression Testing Infrastructure > Visual Testing Utilities > should have visual diff analysis tools",
          "state": "skipped"
        },
        {
          "name": "should have baseline image management",
          "fullName": "Visual Regression Testing Infrastructure > Visual Testing Utilities > should have baseline image management",
          "state": "skipped"
        },
        {
          "name": "should have visual test reporting",
          "fullName": "Visual Regression Testing Infrastructure > Visual Testing Utilities > should have visual test reporting",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/testing-infrastructure/integration-testing.test.ts",
      "tests": [
        {
          "name": "should have Dashboard Grid integration test utilities",
          "fullName": "Integration Testing Infrastructure > Dashboard Framework Integration > should have Dashboard Grid integration test utilities",
          "state": "skipped"
        },
        {
          "name": "should have Widget Container integration helpers",
          "fullName": "Integration Testing Infrastructure > Dashboard Framework Integration > should have Widget Container integration helpers",
          "state": "skipped"
        },
        {
          "name": "should have responsive dashboard integration tests",
          "fullName": "Integration Testing Infrastructure > Dashboard Framework Integration > should have responsive dashboard integration tests",
          "state": "skipped"
        },
        {
          "name": "should have chart-to-chart communication testing",
          "fullName": "Integration Testing Infrastructure > Dashboard Framework Integration > should have chart-to-chart communication testing",
          "state": "skipped"
        },
        {
          "name": "should have customer context isolation testing utilities",
          "fullName": "Integration Testing Infrastructure > Customer Context Integration > should have customer context isolation testing utilities",
          "state": "skipped"
        },
        {
          "name": "should have multi-tenant data validation helpers",
          "fullName": "Integration Testing Infrastructure > Customer Context Integration > should have multi-tenant data validation helpers",
          "state": "skipped"
        },
        {
          "name": "should have customer switching integration tests",
          "fullName": "Integration Testing Infrastructure > Customer Context Integration > should have customer switching integration tests",
          "state": "skipped"
        },
        {
          "name": "should have customer-specific styling validation",
          "fullName": "Integration Testing Infrastructure > Customer Context Integration > should have customer-specific styling validation",
          "state": "skipped"
        },
        {
          "name": "should have theme switching integration utilities",
          "fullName": "Integration Testing Infrastructure > Theme Integration Testing > should have theme switching integration utilities",
          "state": "skipped"
        },
        {
          "name": "should have light/dark mode validation helpers",
          "fullName": "Integration Testing Infrastructure > Theme Integration Testing > should have light/dark mode validation helpers",
          "state": "skipped"
        },
        {
          "name": "should have theme consistency testing across charts",
          "fullName": "Integration Testing Infrastructure > Theme Integration Testing > should have theme consistency testing across charts",
          "state": "skipped"
        },
        {
          "name": "should have mock API integration test utilities",
          "fullName": "Integration Testing Infrastructure > API Integration Testing > should have mock API integration test utilities",
          "state": "skipped"
        },
        {
          "name": "should have data loading integration helpers",
          "fullName": "Integration Testing Infrastructure > API Integration Testing > should have data loading integration helpers",
          "state": "skipped"
        },
        {
          "name": "should have error state integration testing",
          "fullName": "Integration Testing Infrastructure > API Integration Testing > should have error state integration testing",
          "state": "skipped"
        },
        {
          "name": "should have comprehensive integration test runner",
          "fullName": "Integration Testing Infrastructure > Integration Test Runners > should have comprehensive integration test runner",
          "state": "skipped"
        },
        {
          "name": "should have cross-component interaction validator",
          "fullName": "Integration Testing Infrastructure > Integration Test Runners > should have cross-component interaction validator",
          "state": "skipped"
        },
        {
          "name": "should have integration test result reporter",
          "fullName": "Integration Testing Infrastructure > Integration Test Runners > should have integration test result reporter",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-accessibility.test.ts",
      "tests": [
        {
          "name": "should have ARIA label generators available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have ARIA label generators available",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation handlers available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have keyboard navigation handlers available",
          "state": "skipped"
        },
        {
          "name": "should have screen reader utilities available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have screen reader utilities available",
          "state": "skipped"
        },
        {
          "name": "should have focus management utilities available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have focus management utilities available",
          "state": "skipped"
        },
        {
          "name": "should have high contrast support available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have high contrast support available",
          "state": "skipped"
        },
        {
          "name": "should have color accessibility utilities available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have color accessibility utilities available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion support available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have reduced motion support available",
          "state": "skipped"
        },
        {
          "name": "should have alternative text representations available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have alternative text representations available",
          "state": "skipped"
        },
        {
          "name": "should have voice control support available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have voice control support available",
          "state": "skipped"
        },
        {
          "name": "should have skip navigation utilities available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have skip navigation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have live region announcements available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have live region announcements available",
          "state": "skipped"
        },
        {
          "name": "should have semantic markup generators available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have semantic markup generators available",
          "state": "skipped"
        },
        {
          "name": "should have error state accessibility available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have error state accessibility available",
          "state": "skipped"
        },
        {
          "name": "should have loading state accessibility available",
          "fullName": "Pie/Donut Chart Components - Accessibility Implementation (WCAG 2.1 AA) > should have loading state accessibility available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/missing-data-handling.test.ts",
      "tests": [
        {
          "name": "should have gap detection system available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have gap detection system available",
          "state": "skipped"
        },
        {
          "name": "should have configurable interpolation options available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have configurable interpolation options available",
          "state": "skipped"
        },
        {
          "name": "should have broken line rendering support available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have broken line rendering support available",
          "state": "skipped"
        },
        {
          "name": "should have visual gap indicators available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have visual gap indicators available",
          "state": "skipped"
        },
        {
          "name": "should have data quality assessment available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have data quality assessment available",
          "state": "skipped"
        },
        {
          "name": "should have sparse dataset handling available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have sparse dataset handling available",
          "state": "skipped"
        },
        {
          "name": "should have null value handling strategies available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have null value handling strategies available",
          "state": "skipped"
        },
        {
          "name": "should have missing data tooltips available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have missing data tooltips available",
          "state": "passed"
        },
        {
          "name": "should have data imputation options available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have data imputation options available",
          "state": "skipped"
        },
        {
          "name": "should have confidence intervals for interpolated data available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have confidence intervals for interpolated data available",
          "state": "skipped"
        },
        {
          "name": "should have learning analytics data completeness patterns available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have learning analytics data completeness patterns available",
          "state": "skipped"
        },
        {
          "name": "should have data source reliability indicators available",
          "fullName": "Line/Area Chart Components - Missing Data Handling > should have data source reliability indicators available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-performance.test.ts",
      "tests": [
        {
          "name": "should have performance-optimized line chart components available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have performance-optimized line chart components available",
          "state": "skipped"
        },
        {
          "name": "should have render time optimization (<200ms for 1000 points) available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have render time optimization (<200ms for 1000 points) available",
          "state": "skipped"
        },
        {
          "name": "should have 60fps animation performance validation available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have 60fps animation performance validation available",
          "state": "skipped"
        },
        {
          "name": "should have memory efficiency for large datasets available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have memory efficiency for large datasets available",
          "state": "skipped"
        },
        {
          "name": "should have Canvas fallback for 5000+ points available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have Canvas fallback for 5000+ points available",
          "state": "skipped"
        },
        {
          "name": "should have point culling for zoom levels available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have point culling for zoom levels available",
          "state": "skipped"
        },
        {
          "name": "should have efficient path generation optimization available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have efficient path generation optimization available",
          "state": "skipped"
        },
        {
          "name": "should have virtualization for time series data available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have virtualization for time series data available",
          "state": "skipped"
        },
        {
          "name": "should have data streaming and incremental updates available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have data streaming and incremental updates available",
          "state": "skipped"
        },
        {
          "name": "should have Web Workers for data processing available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have Web Workers for data processing available",
          "state": "skipped"
        },
        {
          "name": "should have performance monitoring for line charts available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have performance monitoring for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have efficient re-rendering strategies available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have efficient re-rendering strategies available",
          "state": "skipped"
        },
        {
          "name": "should have GPU acceleration utilities available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have GPU acceleration utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance benchmarking suite available",
          "fullName": "Line/Area Chart Components - Performance Optimization > should have performance benchmarking suite available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-responsive.test.ts",
      "tests": [
        {
          "name": "should have responsive pie chart utilities available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have responsive pie chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have breakpoint-specific pie configurations available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have breakpoint-specific pie configurations available",
          "state": "skipped"
        },
        {
          "name": "should have mobile-optimized label positioning available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have mobile-optimized label positioning available",
          "state": "skipped"
        },
        {
          "name": "should have tablet-optimized pie layouts available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have tablet-optimized pie layouts available",
          "state": "skipped"
        },
        {
          "name": "should have desktop-optimized pie features available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have desktop-optimized pie features available",
          "state": "skipped"
        },
        {
          "name": "should have responsive legend positioning available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have responsive legend positioning available",
          "state": "skipped"
        },
        {
          "name": "should have label collision detection available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have label collision detection available",
          "state": "skipped"
        },
        {
          "name": "should have smart label line positioning available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have smart label line positioning available",
          "state": "skipped"
        },
        {
          "name": "should have container size adaptation available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have container size adaptation available",
          "state": "skipped"
        },
        {
          "name": "should have text scaling utilities available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have text scaling utilities available",
          "state": "skipped"
        },
        {
          "name": "should have touch-friendly interaction zones available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have touch-friendly interaction zones available",
          "state": "skipped"
        },
        {
          "name": "should have viewport orientation handling available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have viewport orientation handling available",
          "state": "skipped"
        },
        {
          "name": "should have responsive animation adjustments available",
          "fullName": "Pie/Donut Chart Components - Responsive Design Implementation > should have responsive animation adjustments available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-variants.test.ts",
      "tests": [
        {
          "name": "should have SimplePieChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have SimplePieChart component available",
          "state": "skipped"
        },
        {
          "name": "should have SimpleDonutChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have SimpleDonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have InteractivePieChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have InteractivePieChart component available",
          "state": "skipped"
        },
        {
          "name": "should have InteractiveDonutChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have InteractiveDonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have SemiCircleChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have SemiCircleChart component available",
          "state": "skipped"
        },
        {
          "name": "should have NestedDonutChart component available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have NestedDonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart variant factory available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have pie chart variant factory available",
          "state": "skipped"
        },
        {
          "name": "should have variant configuration types available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have variant configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have learning analytics specific variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have learning analytics specific variants available",
          "state": "skipped"
        },
        {
          "name": "should have progress gauge variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have progress gauge variants available",
          "state": "skipped"
        },
        {
          "name": "should have drill-down capable variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have drill-down capable variants available",
          "state": "skipped"
        },
        {
          "name": "should have comparison pie chart variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have comparison pie chart variants available",
          "state": "skipped"
        },
        {
          "name": "should have mini pie chart variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have mini pie chart variants available",
          "state": "skipped"
        },
        {
          "name": "should have themed pie chart variants available",
          "fullName": "Pie/Donut Chart Components - Chart Variants Implementation > should have themed pie chart variants available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-interactions.test.ts",
      "tests": [
        {
          "name": "should have InteractiveBarChart component available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have InteractiveBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have InteractiveColumnChart component available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have InteractiveColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have bar chart hover utilities available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have bar chart hover utilities available",
          "state": "skipped"
        },
        {
          "name": "should have bar chart click handlers available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have bar chart click handlers available",
          "state": "skipped"
        },
        {
          "name": "should have tooltip component available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have tooltip component available",
          "state": "passed"
        },
        {
          "name": "should have tooltip positioning utilities available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have tooltip positioning utilities available",
          "state": "passed"
        },
        {
          "name": "should have keyboard navigation utilities available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have keyboard navigation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have focus management utilities available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have focus management utilities available",
          "state": "skipped"
        },
        {
          "name": "should have selection state management available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have selection state management available",
          "state": "skipped"
        },
        {
          "name": "should have interaction event handlers available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have interaction event handlers available",
          "state": "skipped"
        },
        {
          "name": "should have multi-selection utilities available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have multi-selection utilities available",
          "state": "skipped"
        },
        {
          "name": "should have interaction configuration types available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have interaction configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have drill-down navigation available",
          "fullName": "Bar/Column Chart Components - User Interactions Implementation > should have drill-down navigation available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-variants.test.ts",
      "tests": [
        {
          "name": "should have SimpleLineChart component available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have SimpleLineChart component available",
          "state": "skipped"
        },
        {
          "name": "should have MultiLineChart component available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have MultiLineChart component available",
          "state": "skipped"
        },
        {
          "name": "should have SimpleAreaChart component available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have SimpleAreaChart component available",
          "state": "skipped"
        },
        {
          "name": "should have StackedAreaChart component available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have StackedAreaChart component available",
          "state": "skipped"
        },
        {
          "name": "should have StreamGraphChart component available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have StreamGraphChart component available",
          "state": "skipped"
        },
        {
          "name": "should have line chart variant configuration types available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have line chart variant configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have multi-line chart utilities available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have multi-line chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have stacked area chart utilities available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have stacked area chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have stream graph calculations available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have stream graph calculations available",
          "state": "skipped"
        },
        {
          "name": "should have line chart variant factory available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have line chart variant factory available",
          "state": "skipped"
        },
        {
          "name": "should have time series data management available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have time series data management available",
          "state": "skipped"
        },
        {
          "name": "should have color scheme management for time series available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have color scheme management for time series available",
          "state": "skipped"
        },
        {
          "name": "should have legend management for line charts available",
          "fullName": "Line/Area Chart Components - Variants Implementation > should have legend management for line charts available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-animations.test.ts",
      "tests": [
        {
          "name": "should have line drawing animation system available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have line drawing animation system available",
          "state": "skipped"
        },
        {
          "name": "should have path morphing animation available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have path morphing animation available",
          "state": "skipped"
        },
        {
          "name": "should have staggered point animation available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have staggered point animation available",
          "state": "skipped"
        },
        {
          "name": "should have area fill animations available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have area fill animations available",
          "state": "skipped"
        },
        {
          "name": "should have LineAnimationConfig interface available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have LineAnimationConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have stroke-dasharray animation utilities available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have stroke-dasharray animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have smooth transition utilities available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have smooth transition utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation performance optimizations available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have animation performance optimizations available",
          "state": "skipped"
        },
        {
          "name": "should have user motion preference handling available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have user motion preference handling available",
          "state": "skipped"
        },
        {
          "name": "should have animation timing controls available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have animation timing controls available",
          "state": "skipped"
        },
        {
          "name": "should have custom easing functions for line charts available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have custom easing functions for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have animation state management available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have animation state management available",
          "state": "skipped"
        },
        {
          "name": "should have 60fps animation validation available",
          "fullName": "Line/Area Chart Components - Animation Framework > should have 60fps animation validation available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-core.test.ts",
      "tests": [
        {
          "name": "should have LineChart component available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have LineChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AreaChart component available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have AreaChart component available",
          "state": "skipped"
        },
        {
          "name": "should have StreamGraphChart component available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have StreamGraphChart component available",
          "state": "skipped"
        },
        {
          "name": "should have LineChartConfig interface available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have LineChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have AreaChartConfig interface available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have AreaChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have TimeSeriesData interface available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have TimeSeriesData interface available",
          "state": "skipped"
        },
        {
          "name": "should have useLineChart hook available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have useLineChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have useAreaChart hook available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have useAreaChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have useTimeSeriesChart hook available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have useTimeSeriesChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have line chart path generators available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have line chart path generators available",
          "state": "skipped"
        },
        {
          "name": "should have time series utilities available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have time series utilities available",
          "state": "skipped"
        },
        {
          "name": "should have line chart data transformers available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have line chart data transformers available",
          "state": "skipped"
        },
        {
          "name": "should have area chart calculation utilities available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have area chart calculation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have time scale management available",
          "fullName": "Line/Area Chart Components - Core Implementation > should have time scale management available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-performance.test.ts",
      "tests": [
        {
          "name": "should have render time optimization utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have render time optimization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have large dataset handling utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have large dataset handling utilities available",
          "state": "skipped"
        },
        {
          "name": "should have memory management utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have memory management utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation performance monitoring available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have animation performance monitoring available",
          "state": "skipped"
        },
        {
          "name": "should have D3 performance optimization utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have D3 performance optimization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have layout shift prevention utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have layout shift prevention utilities available",
          "state": "skipped"
        },
        {
          "name": "should have data processing optimization available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have data processing optimization available",
          "state": "skipped"
        },
        {
          "name": "should have interaction performance utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have interaction performance utilities available",
          "state": "skipped"
        },
        {
          "name": "should have Web Worker integration available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have Web Worker integration available",
          "state": "skipped"
        },
        {
          "name": "should have performance budget enforcement available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have performance budget enforcement available",
          "state": "skipped"
        },
        {
          "name": "should have progressive loading utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have progressive loading utilities available",
          "state": "skipped"
        },
        {
          "name": "should have canvas fallback rendering available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have canvas fallback rendering available",
          "state": "skipped"
        },
        {
          "name": "should have performance testing utilities available",
          "fullName": "Pie/Donut Chart Components - Performance Implementation > should have performance testing utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-interactions.test.ts",
      "tests": [
        {
          "name": "should have hover effects system available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have hover effects system available",
          "state": "skipped"
        },
        {
          "name": "should have nearest point detection available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have nearest point detection available",
          "state": "skipped"
        },
        {
          "name": "should have rich tooltip system available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have rich tooltip system available",
          "state": "passed"
        },
        {
          "name": "should have zoom and pan functionality available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have zoom and pan functionality available",
          "state": "skipped"
        },
        {
          "name": "should have crosshair cursor system available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have crosshair cursor system available",
          "state": "skipped"
        },
        {
          "name": "should have legend interaction system available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have legend interaction system available",
          "state": "skipped"
        },
        {
          "name": "should have brush selection functionality available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have brush selection functionality available",
          "state": "skipped"
        },
        {
          "name": "should have multi-chart synchronization available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have multi-chart synchronization available",
          "state": "skipped"
        },
        {
          "name": "should have point highlighting system available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have point highlighting system available",
          "state": "skipped"
        },
        {
          "name": "should have interactive value indicators available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have interactive value indicators available",
          "state": "skipped"
        },
        {
          "name": "should have time period selection available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have time period selection available",
          "state": "skipped"
        },
        {
          "name": "should have interactive event handlers available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have interactive event handlers available",
          "state": "skipped"
        },
        {
          "name": "should have touch and mobile interactions available",
          "fullName": "Line/Area Chart Components - Interactive Features > should have touch and mobile interactions available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/architecture/task-1-1-basic-architecture.test.ts",
      "tests": [
        {
          "name": "should have Next.js configuration",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 1. Next.js 13+ with TypeScript > should have Next.js configuration",
          "state": "skipped"
        },
        {
          "name": "should have TypeScript configuration",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 1. Next.js 13+ with TypeScript > should have TypeScript configuration",
          "state": "skipped"
        },
        {
          "name": "should have app directory for App Router",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 1. Next.js 13+ with TypeScript > should have app directory for App Router",
          "state": "skipped"
        },
        {
          "name": "should have Tailwind configuration",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 2. TailwindCSS Configuration > should have Tailwind configuration",
          "state": "skipped"
        },
        {
          "name": "should have PostCSS configuration",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 2. TailwindCSS Configuration > should have PostCSS configuration",
          "state": "skipped"
        },
        {
          "name": "should have global CSS with Tailwind imports",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 2. TailwindCSS Configuration > should have global CSS with Tailwind imports",
          "state": "skipped"
        },
        {
          "name": "should have Zustand stores directory",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 3. Zustand State Management > should have Zustand stores directory",
          "state": "skipped"
        },
        {
          "name": "should have auth store",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 3. Zustand State Management > should have auth store",
          "state": "skipped"
        },
        {
          "name": "should have customer store",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 3. Zustand State Management > should have customer store",
          "state": "skipped"
        },
        {
          "name": "should have UI store",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 3. Zustand State Management > should have UI store",
          "state": "skipped"
        },
        {
          "name": "should have middleware for route protection",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 4. Next.js App Router > should have middleware for route protection",
          "state": "skipped"
        },
        {
          "name": "should have dashboard route group",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 4. Next.js App Router > should have dashboard route group",
          "state": "skipped"
        },
        {
          "name": "should have API routes",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 4. Next.js App Router > should have API routes",
          "state": "skipped"
        },
        {
          "name": "should have layout components directory",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 5. Responsive Layout Components > should have layout components directory",
          "state": "skipped"
        },
        {
          "name": "should have AppLayout component",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 5. Responsive Layout Components > should have AppLayout component",
          "state": "skipped"
        },
        {
          "name": "should have Sidebar component",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 5. Responsive Layout Components > should have Sidebar component",
          "state": "skipped"
        },
        {
          "name": "should have Header component",
          "fullName": "Task 1.1: React Application Architecture - Basic Requirements > 5. Responsive Layout Components > should have Header component",
          "state": "skipped"
        },
        {
          "name": "TDD Guard should prevent implementation without failing test",
          "fullName": "TDD Guard Verification > TDD Guard should prevent implementation without failing test",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/animation-framework.test.ts",
      "tests": [
        {
          "name": "should have AnimatedChart component available",
          "fullName": "Chart Animation Framework > should have AnimatedChart component available",
          "state": "skipped"
        },
        {
          "name": "should have animation configuration types available",
          "fullName": "Chart Animation Framework > should have animation configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have useChartAnimation hook available",
          "fullName": "Chart Animation Framework > should have useChartAnimation hook available",
          "state": "skipped"
        },
        {
          "name": "should have animation easing utilities available",
          "fullName": "Chart Animation Framework > should have animation easing utilities available",
          "state": "skipped"
        },
        {
          "name": "should have staggered animation utilities available",
          "fullName": "Chart Animation Framework > should have staggered animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation lifecycle hooks available",
          "fullName": "Chart Animation Framework > should have animation lifecycle hooks available",
          "state": "skipped"
        },
        {
          "name": "should have transition utilities available",
          "fullName": "Chart Animation Framework > should have transition utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation performance monitoring available",
          "fullName": "Chart Animation Framework > should have animation performance monitoring available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion detection available",
          "fullName": "Chart Animation Framework > should have reduced motion detection available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-interactions.test.ts",
      "tests": [
        {
          "name": "should have slice hover interaction handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have slice hover interaction handlers available",
          "state": "skipped"
        },
        {
          "name": "should have slice click interaction handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have slice click interaction handlers available",
          "state": "skipped"
        },
        {
          "name": "should have slice explode effects available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have slice explode effects available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart tooltip utilities available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have pie chart tooltip utilities available",
          "state": "passed"
        },
        {
          "name": "should have legend interaction handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have legend interaction handlers available",
          "state": "skipped"
        },
        {
          "name": "should have keyboard navigation handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have keyboard navigation handlers available",
          "state": "skipped"
        },
        {
          "name": "should have selection state management available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have selection state management available",
          "state": "skipped"
        },
        {
          "name": "should have interaction event handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have interaction event handlers available",
          "state": "skipped"
        },
        {
          "name": "should have center content update handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have center content update handlers available",
          "state": "skipped"
        },
        {
          "name": "should have slice highlight effects available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have slice highlight effects available",
          "state": "skipped"
        },
        {
          "name": "should have drill-down navigation utilities available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have drill-down navigation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have touch interaction handlers available",
          "fullName": "Pie/Donut Chart Components - Interactive Features Implementation > should have touch interaction handlers available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-animations.test.ts",
      "tests": [
        {
          "name": "should have AnimatedBarChart component available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have AnimatedBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AnimatedColumnChart component available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have AnimatedColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have animation configuration types available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have animation configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have bar chart animation hooks available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have bar chart animation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have column chart animation hooks available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have column chart animation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have D3 transition utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have D3 transition utilities available",
          "state": "skipped"
        },
        {
          "name": "should have enter animation utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have enter animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have update animation utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have update animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have exit animation utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have exit animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have staggered animation utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have staggered animation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have easing functions available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have easing functions available",
          "state": "skipped"
        },
        {
          "name": "should have reduced motion utilities available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have reduced motion utilities available",
          "state": "skipped"
        },
        {
          "name": "should have animation performance monitor available",
          "fullName": "Bar/Column Chart Components - Animation Framework Implementation > should have animation performance monitor available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/performance-optimization.test.ts",
      "tests": [
        {
          "name": "should have PerformantChart component available",
          "fullName": "Chart Performance Optimization for Large Datasets > Large Dataset Handling > should have PerformantChart component available",
          "state": "skipped"
        },
        {
          "name": "should have virtualization utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Large Dataset Handling > should have virtualization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance configuration types available",
          "fullName": "Chart Performance Optimization for Large Datasets > Large Dataset Handling > should have performance configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have useChartPerformance hook available",
          "fullName": "Chart Performance Optimization for Large Datasets > Memory Management > should have useChartPerformance hook available",
          "state": "skipped"
        },
        {
          "name": "should have memory cleanup utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Memory Management > should have memory cleanup utilities available",
          "state": "skipped"
        },
        {
          "name": "should have data caching utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Memory Management > should have data caching utilities available",
          "state": "skipped"
        },
        {
          "name": "should have web worker utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Web Worker Integration > should have web worker utilities available",
          "state": "skipped"
        },
        {
          "name": "should have worker communication types available",
          "fullName": "Chart Performance Optimization for Large Datasets > Web Worker Integration > should have worker communication types available",
          "state": "skipped"
        },
        {
          "name": "should have performance metrics utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Performance Monitoring > should have performance metrics utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance budget validation available",
          "fullName": "Chart Performance Optimization for Large Datasets > Performance Monitoring > should have performance budget validation available",
          "state": "skipped"
        },
        {
          "name": "should have lazy loading utilities available",
          "fullName": "Chart Performance Optimization for Large Datasets > Bundle Size Optimization > should have lazy loading utilities available",
          "state": "skipped"
        },
        {
          "name": "should have optimized D3 imports available",
          "fullName": "Chart Performance Optimization for Large Datasets > Bundle Size Optimization > should have optimized D3 imports available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/line-area-chart-responsive.test.ts",
      "tests": [
        {
          "name": "should have responsive line chart components available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive line chart components available",
          "state": "skipped"
        },
        {
          "name": "should have mobile/tablet/desktop breakpoint handling available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have mobile/tablet/desktop breakpoint handling available",
          "state": "skipped"
        },
        {
          "name": "should have adaptive time axis formatting available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have adaptive time axis formatting available",
          "state": "skipped"
        },
        {
          "name": "should have adaptive point density system available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have adaptive point density system available",
          "state": "skipped"
        },
        {
          "name": "should have container-aware sizing available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have container-aware sizing available",
          "state": "skipped"
        },
        {
          "name": "should have responsive layout calculations available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive layout calculations available",
          "state": "skipped"
        },
        {
          "name": "should have screen size optimizations available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have screen size optimizations available",
          "state": "skipped"
        },
        {
          "name": "should have responsive legend positioning available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive legend positioning available",
          "state": "skipped"
        },
        {
          "name": "should have mobile touch optimizations available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have mobile touch optimizations available",
          "state": "skipped"
        },
        {
          "name": "should have responsive text scaling available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive text scaling available",
          "state": "skipped"
        },
        {
          "name": "should have viewport adaptation utilities available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have viewport adaptation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have aspect ratio management for line charts available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have aspect ratio management for line charts available",
          "state": "skipped"
        },
        {
          "name": "should have responsive grid line management available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive grid line management available",
          "state": "skipped"
        },
        {
          "name": "should have responsive animation scaling available",
          "fullName": "Line/Area Chart Components - Responsive Design > should have responsive animation scaling available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/bar-chart-variants.test.ts",
      "tests": [
        {
          "name": "should have SimpleBarChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have SimpleBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have GroupedBarChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have GroupedBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have StackedBarChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have StackedBarChart component available",
          "state": "skipped"
        },
        {
          "name": "should have SimpleColumnChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have SimpleColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have GroupedColumnChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have GroupedColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have StackedColumnChart component available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have StackedColumnChart component available",
          "state": "skipped"
        },
        {
          "name": "should have variant configuration types available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have variant configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have grouped chart utilities available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have grouped chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have stacked chart utilities available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have stacked chart utilities available",
          "state": "skipped"
        },
        {
          "name": "should have chart variant factory available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have chart variant factory available",
          "state": "skipped"
        },
        {
          "name": "should have data series management available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have data series management available",
          "state": "skipped"
        },
        {
          "name": "should have color scheme management for variants available",
          "fullName": "Bar/Column Chart Components - Variants Implementation > should have color scheme management for variants available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-core.test.ts",
      "tests": [
        {
          "name": "should have PieChart component available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have PieChart component available",
          "state": "skipped"
        },
        {
          "name": "should have DonutChart component available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have DonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have SemiCircleChart component available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have SemiCircleChart component available",
          "state": "skipped"
        },
        {
          "name": "should have NestedDonutChart component available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have NestedDonutChart component available",
          "state": "skipped"
        },
        {
          "name": "should have PieChartConfig interface available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have PieChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have PieDataPoint interface available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have PieDataPoint interface available",
          "state": "skipped"
        },
        {
          "name": "should have DonutChartConfig interface available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have DonutChartConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have PieInteractionConfig interface available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have PieInteractionConfig interface available",
          "state": "skipped"
        },
        {
          "name": "should have usePieChart hook available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have usePieChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have useDonutChart hook available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have useDonutChart hook available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart arc generation utilities available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have pie chart arc generation utilities available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart data transformers available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have pie chart data transformers available",
          "state": "skipped"
        },
        {
          "name": "should have pie chart math utilities available",
          "fullName": "Pie/Donut Chart Components - Core Implementation > should have pie chart math utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/pie-donut-chart-learning-analytics.test.ts",
      "tests": [
        {
          "name": "should have certification status distribution utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have certification status distribution utilities available",
          "state": "skipped"
        },
        {
          "name": "should have course completion breakdown utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have course completion breakdown utilities available",
          "state": "skipped"
        },
        {
          "name": "should have learning category distribution utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have learning category distribution utilities available",
          "state": "skipped"
        },
        {
          "name": "should have employee engagement visualization utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have employee engagement visualization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have training method preference utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have training method preference utilities available",
          "state": "skipped"
        },
        {
          "name": "should have departmental analytics utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have departmental analytics utilities available",
          "state": "skipped"
        },
        {
          "name": "should have skill gap analysis utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have skill gap analysis utilities available",
          "state": "skipped"
        },
        {
          "name": "should have compliance status visualization utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have compliance status visualization utilities available",
          "state": "skipped"
        },
        {
          "name": "should have learning path progress utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have learning path progress utilities available",
          "state": "skipped"
        },
        {
          "name": "should have performance analytics utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have performance analytics utilities available",
          "state": "skipped"
        },
        {
          "name": "should have time-in-learning analytics utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have time-in-learning analytics utilities available",
          "state": "skipped"
        },
        {
          "name": "should have multi-tenant data filtering utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have multi-tenant data filtering utilities available",
          "state": "skipped"
        },
        {
          "name": "should have learning analytics dashboard integration available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have learning analytics dashboard integration available",
          "state": "skipped"
        },
        {
          "name": "should have real-time analytics update utilities available",
          "fullName": "Pie/Donut Chart Components - Learning Analytics Integration > should have real-time analytics update utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/base-chart-simple.test.ts",
      "tests": [
        {
          "name": "should have BaseChart component available",
          "fullName": "D3 Chart Components - Base Architecture > should have BaseChart component available",
          "state": "skipped"
        },
        {
          "name": "should have useD3Chart hook available",
          "fullName": "D3 Chart Components - Base Architecture > should have useD3Chart hook available",
          "state": "skipped"
        },
        {
          "name": "should have ChartProvider context available",
          "fullName": "D3 Chart Components - Base Architecture > should have ChartProvider context available",
          "state": "skipped"
        },
        {
          "name": "should have ResponsiveChart component available",
          "fullName": "D3 Chart Components - Base Architecture > should have ResponsiveChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AnimatedChart component available",
          "fullName": "D3 Chart Components - Base Architecture > should have AnimatedChart component available",
          "state": "skipped"
        },
        {
          "name": "should have AccessibleChart component available",
          "fullName": "D3 Chart Components - Base Architecture > should have AccessibleChart component available",
          "state": "skipped"
        },
        {
          "name": "should have PerformantChart component available",
          "fullName": "D3 Chart Components - Base Architecture > should have PerformantChart component available",
          "state": "skipped"
        },
        {
          "name": "should have chart performance hooks available",
          "fullName": "D3 Chart Components - Base Architecture > should have chart performance hooks available",
          "state": "skipped"
        },
        {
          "name": "should have chart animation hooks available",
          "fullName": "D3 Chart Components - Base Architecture > should have chart animation hooks available",
          "state": "skipped"
        },
        {
          "name": "should have chart types available",
          "fullName": "D3 Chart Components - Base Architecture > should have chart types available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/responsive-scaling.test.ts",
      "tests": [
        {
          "name": "should have ResponsiveChart component available",
          "fullName": "Responsive Chart Scaling System > should have ResponsiveChart component available",
          "state": "skipped"
        },
        {
          "name": "should have useBreakpoint hook available",
          "fullName": "Responsive Chart Scaling System > should have useBreakpoint hook available",
          "state": "skipped"
        },
        {
          "name": "should have responsive configuration types available",
          "fullName": "Responsive Chart Scaling System > should have responsive configuration types available",
          "state": "skipped"
        },
        {
          "name": "should have viewport utilities available",
          "fullName": "Responsive Chart Scaling System > should have viewport utilities available",
          "state": "skipped"
        },
        {
          "name": "should have breakpoint constants available",
          "fullName": "Responsive Chart Scaling System > should have breakpoint constants available",
          "state": "skipped"
        },
        {
          "name": "should have responsive chart layout utilities available",
          "fullName": "Responsive Chart Scaling System > should have responsive chart layout utilities available",
          "state": "skipped"
        },
        {
          "name": "should have resize observer utilities available",
          "fullName": "Responsive Chart Scaling System > should have resize observer utilities available",
          "state": "skipped"
        },
        {
          "name": "should have responsive font scaling utilities available",
          "fullName": "Responsive Chart Scaling System > should have responsive font scaling utilities available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/dashboard/dashboard-framework.test.ts",
      "tests": [
        {
          "name": "should have dashboard layout component",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 1. Responsive Dashboard Layout System > should have dashboard layout component",
          "state": "skipped"
        },
        {
          "name": "should have grid system for dashboard widgets",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 1. Responsive Dashboard Layout System > should have grid system for dashboard widgets",
          "state": "skipped"
        },
        {
          "name": "should have widget container component",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 1. Responsive Dashboard Layout System > should have widget container component",
          "state": "skipped"
        },
        {
          "name": "should have components organized by categories",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 2. Reusable Component Library Structure > should have components organized by categories",
          "state": "skipped"
        },
        {
          "name": "should have common UI components",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 2. Reusable Component Library Structure > should have common UI components",
          "state": "skipped"
        },
        {
          "name": "should have component library index file",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 2. Reusable Component Library Structure > should have component library index file",
          "state": "skipped"
        },
        {
          "name": "should have theme provider component",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 3. Theme Switching (Light/Dark Mode) > should have theme provider component",
          "state": "skipped"
        },
        {
          "name": "should have theme toggle component",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 3. Theme Switching (Light/Dark Mode) > should have theme toggle component",
          "state": "skipped"
        },
        {
          "name": "should have theme store for state management",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 3. Theme Switching (Light/Dark Mode) > should have theme store for state management",
          "state": "skipped"
        },
        {
          "name": "should have main navigation component",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 4. Navigation and Sidebar Components > should have main navigation component",
          "state": "skipped"
        },
        {
          "name": "should have breadcrumb navigation",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 4. Navigation and Sidebar Components > should have breadcrumb navigation",
          "state": "skipped"
        },
        {
          "name": "should have collapsible sidebar",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 4. Navigation and Sidebar Components > should have collapsible sidebar",
          "state": "skipped"
        },
        {
          "name": "should have breakpoint utilities",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 5. Responsive Breakpoint Management > should have breakpoint utilities",
          "state": "skipped"
        },
        {
          "name": "should have responsive hook for breakpoints",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 5. Responsive Breakpoint Management > should have responsive hook for breakpoints",
          "state": "skipped"
        },
        {
          "name": "should have mobile-first responsive configuration",
          "fullName": "Task 1.3: Dashboard Framework Foundation > 5. Responsive Breakpoint Management > should have mobile-first responsive configuration",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/navigation/drill-down-navigation.test.ts",
      "tests": [
        {
          "name": "should manage drill-down navigation state through hierarchical levels",
          "fullName": "DrillDownNavigation - Core Navigation > should manage drill-down navigation state through hierarchical levels",
          "state": "skipped"
        },
        {
          "name": "should flow department data correctly to team and individual levels",
          "fullName": "DrillDownNavigation - Core Navigation > should flow department data correctly to team and individual levels",
          "state": "skipped"
        },
        {
          "name": "should integrate chart components with drill-down navigation capabilities",
          "fullName": "DrillDownNavigation - Core Navigation > should integrate chart components with drill-down navigation capabilities",
          "state": "skipped"
        },
        {
          "name": "should handle navigation errors gracefully with fallback behavior",
          "fullName": "DrillDownNavigation - Core Navigation > should handle navigation errors gracefully with fallback behavior",
          "state": "skipped"
        },
        {
          "name": "should render breadcrumb navigation with correct hierarchical path",
          "fullName": "DrillDownNavigation - Breadcrumb Component > should render breadcrumb navigation with correct hierarchical path",
          "state": "skipped"
        },
        {
          "name": "should enable click navigation through breadcrumb segments",
          "fullName": "DrillDownNavigation - Breadcrumb Component > should enable click navigation through breadcrumb segments",
          "state": "skipped"
        },
        {
          "name": "should synchronize navigation state with URL parameters",
          "fullName": "DrillDownNavigation - Browser Integration > should synchronize navigation state with URL parameters",
          "state": "skipped"
        },
        {
          "name": "should support browser back/forward navigation through drill-down levels",
          "fullName": "DrillDownNavigation - Browser Integration > should support browser back/forward navigation through drill-down levels",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/performance-simple.test.ts",
      "tests": [
        {
          "name": "should have PerformantChart component available",
          "fullName": "Chart Performance Optimization - Basic Architecture > should have PerformantChart component available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/responsive-simple.test.ts",
      "tests": [
        {
          "name": "should have ResponsiveChart component available",
          "fullName": "Chart Responsive Scaling - Basic Architecture > should have ResponsiveChart component available",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/setup/nextjs.setup.test.ts",
      "tests": [
        {
          "name": "should have valid next.config.js with TypeScript support",
          "fullName": "Next.js 13+ Application Setup > Configuration Files > should have valid next.config.js with TypeScript support",
          "state": "skipped"
        }
      ]
    },
    {
      "moduleId": "/Users/russellgrocott/Projects/kineo-analytics/frontend/tests/charts/accessibility-simple.test.ts",
      "tests": [
        {
          "name": "should have AccessibleChart component available",
          "fullName": "Chart Accessibility Components - Basic Architecture > should have AccessibleChart component available",
          "state": "skipped"
        }
      ]
    }
  ],
  "unhandledErrors": [],
  "reason": "failed"
}